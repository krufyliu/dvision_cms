{"version":3,"sources":["v2_idangerous.swiper.js","v2_idangerous.swiper.progress.js","v2_scrollreveal.js","v2_index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC70FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrfile":"index.js","sourcesContent":["/*\n * Swiper 2.7.6\n * Mobile touch slider and framework with hardware accelerated transitions\n *\n * http://www.idangero.us/sliders/swiper/\n *\n * Copyright 2010-2015, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under GPL & MIT\n *\n * Released on: February 11, 2015\n*/\nvar Swiper = function (selector, params) {\n    'use strict';\n\n    /*=========================\n      A little bit dirty but required part for IE8 and old FF support\n      ===========================*/\n    if (!document.body.outerHTML && document.body.__defineGetter__) {\n        if (HTMLElement) {\n            var element = HTMLElement.prototype;\n            if (element.__defineGetter__) {\n                element.__defineGetter__('outerHTML', function () { return new XMLSerializer().serializeToString(this); });\n            }\n        }\n    }\n\n    if (!window.getComputedStyle) {\n        window.getComputedStyle = function (el, pseudo) {\n            this.el = el;\n            this.getPropertyValue = function (prop) {\n                var re = /(\\-([a-z]){1})/g;\n                if (prop === 'float') prop = 'styleFloat';\n                if (re.test(prop)) {\n                    prop = prop.replace(re, function () {\n                        return arguments[2].toUpperCase();\n                    });\n                }\n                return el.currentStyle[prop] ? el.currentStyle[prop] : null;\n            };\n            return this;\n        };\n    }\n    if (!Array.prototype.indexOf) {\n        Array.prototype.indexOf = function (obj, start) {\n            for (var i = (start || 0), j = this.length; i < j; i++) {\n                if (this[i] === obj) { return i; }\n            }\n            return -1;\n        };\n    }\n    if (!document.querySelectorAll) {\n        if (!window.jQuery) return;\n    }\n    function $$(selector, context) {\n        if (document.querySelectorAll)\n            return (context || document).querySelectorAll(selector);\n        else\n            return jQuery(selector, context);\n    }\n\n    /*=========================\n      Check for correct selector\n      ===========================*/\n    if (typeof selector === 'undefined') return;\n\n    if (!(selector.nodeType)) {\n        if ($$(selector).length === 0) return;\n    }\n\n     /*=========================\n      _this\n      ===========================*/\n    var _this = this;\n\n     /*=========================\n      Default Flags and vars\n      ===========================*/\n    _this.touches = {\n        start: 0,\n        startX: 0,\n        startY: 0,\n        current: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n        abs: 0\n    };\n    _this.positions = {\n        start: 0,\n        abs: 0,\n        diff: 0,\n        current: 0\n    };\n    _this.times = {\n        start: 0,\n        end: 0\n    };\n\n    _this.id = (new Date()).getTime();\n    _this.container = (selector.nodeType) ? selector : $$(selector)[0];\n    _this.isTouched = false;\n    _this.isMoved = false;\n    _this.activeIndex = 0;\n    _this.centerIndex = 0;\n    _this.activeLoaderIndex = 0;\n    _this.activeLoopIndex = 0;\n    _this.previousIndex = null;\n    _this.velocity = 0;\n    _this.snapGrid = [];\n    _this.slidesGrid = [];\n    _this.imagesToLoad = [];\n    _this.imagesLoaded = 0;\n    _this.wrapperLeft = 0;\n    _this.wrapperRight = 0;\n    _this.wrapperTop = 0;\n    _this.wrapperBottom = 0;\n    _this.isAndroid = navigator.userAgent.toLowerCase().indexOf('android') >= 0;\n    var wrapper, slideSize, wrapperSize, direction, isScrolling, containerSize;\n\n    /*=========================\n      Default Parameters\n      ===========================*/\n    var defaults = {\n        eventTarget: 'wrapper', // or 'container'\n        mode : 'horizontal', // or 'vertical'\n        touchRatio : 1,\n        speed : 300,\n        freeMode : false,\n        freeModeFluid : false,\n        momentumRatio: 1,\n        momentumBounce: true,\n        momentumBounceRatio: 1,\n        slidesPerView : 1,\n        slidesPerGroup : 1,\n        slidesPerViewFit: true, //Fit to slide when spv \"auto\" and slides larger than container\n        simulateTouch : true,\n        followFinger : true,\n        shortSwipes : true,\n        longSwipesRatio: 0.5,\n        moveStartThreshold: false,\n        onlyExternal : false,\n        createPagination : true,\n        pagination : false,\n        paginationElement: 'span',\n        paginationClickable: false,\n        paginationAsRange: true,\n        resistance : true, // or false or 100%\n        scrollContainer : false,\n        preventLinks : true,\n        preventLinksPropagation: false,\n        noSwiping : false, // or class\n        noSwipingClass : 'swiper-no-swiping', //:)\n        initialSlide: 0,\n        keyboardControl: false,\n        mousewheelControl : false,\n        mousewheelControlForceToAxis : false,\n        useCSS3Transforms : true,\n        // Autoplay\n        autoplay: false,\n        autoplayDisableOnInteraction: true,\n        autoplayStopOnLast: false,\n        //Loop mode\n        loop: false,\n        loopAdditionalSlides: 0,\n        // Round length values\n        roundLengths: false,\n        //Auto Height\n        calculateHeight: false,\n        //Apply CSS for width and/or height\n        cssWidthAndHeight: false, // or true or 'width' or 'height'\n        //Images Preloader\n        updateOnImagesReady : true,\n        //Form elements\n        releaseFormElements : true,\n        //Watch for active slide, useful when use effects on different slide states\n        watchActiveIndex: false,\n        //Slides Visibility Fit\n        visibilityFullFit : false,\n        //Slides Offset\n        offsetPxBefore : 0,\n        offsetPxAfter : 0,\n        offsetSlidesBefore : 0,\n        offsetSlidesAfter : 0,\n        centeredSlides: false,\n        //Queue callbacks\n        queueStartCallbacks : false,\n        queueEndCallbacks : false,\n        //Auto Resize\n        autoResize : true,\n        resizeReInit : false,\n        //DOMAnimation\n        DOMAnimation : true,\n        //Slides Loader\n        loader: {\n            slides: [], //array with slides\n            slidesHTMLType: 'inner', // or 'outer'\n            surroundGroups: 1, //keep preloaded slides groups around view\n            logic: 'reload', //or 'change'\n            loadAllSlides: false\n        },\n        // One way swipes\n        swipeToPrev: true,\n        swipeToNext: true,\n        //Namespace\n        slideElement: 'div',\n        slideClass: 'swiper-slide',\n        slideActiveClass: 'swiper-slide-active',\n        slideVisibleClass: 'swiper-slide-visible',\n        slideDuplicateClass: 'swiper-slide-duplicate',\n        wrapperClass: 'swiper-wrapper',\n        paginationElementClass: 'swiper-pagination-switch',\n        paginationActiveClass: 'swiper-active-switch',\n        paginationVisibleClass: 'swiper-visible-switch'\n    };\n    params = params || {};\n    for (var prop in defaults) {\n        if (prop in params && typeof params[prop] === 'object') {\n            for (var subProp in defaults[prop]) {\n                if (! (subProp in params[prop])) {\n                    params[prop][subProp] = defaults[prop][subProp];\n                }\n            }\n        }\n        else if (! (prop in params)) {\n            params[prop] = defaults[prop];\n        }\n    }\n    _this.params = params;\n    if (params.scrollContainer) {\n        params.freeMode = true;\n        params.freeModeFluid = true;\n    }\n    if (params.loop) {\n        params.resistance = '100%';\n    }\n    var isH = params.mode === 'horizontal';\n\n    /*=========================\n      Define Touch Events\n      ===========================*/\n    var desktopEvents = ['mousedown', 'mousemove', 'mouseup'];\n    if (_this.browser.ie10) desktopEvents = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n    if (_this.browser.ie11) desktopEvents = ['pointerdown', 'pointermove', 'pointerup'];\n\n    _this.touchEvents = {\n        touchStart : _this.support.touch || !params.simulateTouch  ? 'touchstart' : desktopEvents[0],\n        touchMove : _this.support.touch || !params.simulateTouch ? 'touchmove' : desktopEvents[1],\n        touchEnd : _this.support.touch || !params.simulateTouch ? 'touchend' : desktopEvents[2]\n    };\n\n    /*=========================\n      Wrapper\n      ===========================*/\n    for (var i = _this.container.childNodes.length - 1; i >= 0; i--) {\n        if (_this.container.childNodes[i].className) {\n            var _wrapperClasses = _this.container.childNodes[i].className.split(/\\s+/);\n            for (var j = 0; j < _wrapperClasses.length; j++) {\n                if (_wrapperClasses[j] === params.wrapperClass) {\n                    wrapper = _this.container.childNodes[i];\n                }\n            }\n        }\n    }\n\n    _this.wrapper = wrapper;\n    /*=========================\n      Slide API\n      ===========================*/\n    _this._extendSwiperSlide = function  (el) {\n        el.append = function () {\n            if (params.loop) {\n                el.insertAfter(_this.slides.length - _this.loopedSlides);\n            }\n            else {\n                _this.wrapper.appendChild(el);\n                _this.reInit();\n            }\n\n            return el;\n        };\n        el.prepend = function () {\n            if (params.loop) {\n                _this.wrapper.insertBefore(el, _this.slides[_this.loopedSlides]);\n                _this.removeLoopedSlides();\n                _this.calcSlides();\n                _this.createLoop();\n            }\n            else {\n                _this.wrapper.insertBefore(el, _this.wrapper.firstChild);\n            }\n            _this.reInit();\n            return el;\n        };\n        el.insertAfter = function (index) {\n            if (typeof index === 'undefined') return false;\n            var beforeSlide;\n\n            if (params.loop) {\n                beforeSlide = _this.slides[index + 1 + _this.loopedSlides];\n                if (beforeSlide) {\n                    _this.wrapper.insertBefore(el, beforeSlide);\n                }\n                else {\n                    _this.wrapper.appendChild(el);\n                }\n                _this.removeLoopedSlides();\n                _this.calcSlides();\n                _this.createLoop();\n            }\n            else {\n                beforeSlide = _this.slides[index + 1];\n                _this.wrapper.insertBefore(el, beforeSlide);\n            }\n            _this.reInit();\n            return el;\n        };\n        el.clone = function () {\n            return _this._extendSwiperSlide(el.cloneNode(true));\n        };\n        el.remove = function () {\n            _this.wrapper.removeChild(el);\n            _this.reInit();\n        };\n        el.html = function (html) {\n            if (typeof html === 'undefined') {\n                return el.innerHTML;\n            }\n            else {\n                el.innerHTML = html;\n                return el;\n            }\n        };\n        el.index = function () {\n            var index;\n            for (var i = _this.slides.length - 1; i >= 0; i--) {\n                if (el === _this.slides[i]) index = i;\n            }\n            return index;\n        };\n        el.isActive = function () {\n            if (el.index() === _this.activeIndex) return true;\n            else return false;\n        };\n        if (!el.swiperSlideDataStorage) el.swiperSlideDataStorage = {};\n        el.getData = function (name) {\n            return el.swiperSlideDataStorage[name];\n        };\n        el.setData = function (name, value) {\n            el.swiperSlideDataStorage[name] = value;\n            return el;\n        };\n        el.data = function (name, value) {\n            if (typeof value === 'undefined') {\n                return el.getAttribute('data-' + name);\n            }\n            else {\n                el.setAttribute('data-' + name, value);\n                return el;\n            }\n        };\n        el.getWidth = function (outer, round) {\n            return _this.h.getWidth(el, outer, round);\n        };\n        el.getHeight = function (outer, round) {\n            return _this.h.getHeight(el, outer, round);\n        };\n        el.getOffset = function () {\n            return _this.h.getOffset(el);\n        };\n        return el;\n    };\n\n    //Calculate information about number of slides\n    _this.calcSlides = function (forceCalcSlides) {\n        var oldNumber = _this.slides ? _this.slides.length : false;\n        _this.slides = [];\n        _this.displaySlides = [];\n        for (var i = 0; i < _this.wrapper.childNodes.length; i++) {\n            if (_this.wrapper.childNodes[i].className) {\n                var _className = _this.wrapper.childNodes[i].className;\n                var _slideClasses = _className.split(/\\s+/);\n                for (var j = 0; j < _slideClasses.length; j++) {\n                    if (_slideClasses[j] === params.slideClass) {\n                        _this.slides.push(_this.wrapper.childNodes[i]);\n                    }\n                }\n            }\n        }\n        for (i = _this.slides.length - 1; i >= 0; i--) {\n            _this._extendSwiperSlide(_this.slides[i]);\n        }\n        if (oldNumber === false) return;\n        if (oldNumber !== _this.slides.length || forceCalcSlides) {\n\n            // Number of slides has been changed\n            removeSlideEvents();\n            addSlideEvents();\n            _this.updateActiveSlide();\n            if (_this.params.pagination) _this.createPagination();\n            _this.callPlugins('numberOfSlidesChanged');\n        }\n    };\n\n    //Create Slide\n    _this.createSlide = function (html, slideClassList, el) {\n        slideClassList = slideClassList || _this.params.slideClass;\n        el = el || params.slideElement;\n        var newSlide = document.createElement(el);\n        newSlide.innerHTML = html || '';\n        newSlide.className = slideClassList;\n        return _this._extendSwiperSlide(newSlide);\n    };\n\n    //Append Slide\n    _this.appendSlide = function (html, slideClassList, el) {\n        if (!html) return;\n        if (html.nodeType) {\n            return _this._extendSwiperSlide(html).append();\n        }\n        else {\n            return _this.createSlide(html, slideClassList, el).append();\n        }\n    };\n    _this.prependSlide = function (html, slideClassList, el) {\n        if (!html) return;\n        if (html.nodeType) {\n            return _this._extendSwiperSlide(html).prepend();\n        }\n        else {\n            return _this.createSlide(html, slideClassList, el).prepend();\n        }\n    };\n    _this.insertSlideAfter = function (index, html, slideClassList, el) {\n        if (typeof index === 'undefined') return false;\n        if (html.nodeType) {\n            return _this._extendSwiperSlide(html).insertAfter(index);\n        }\n        else {\n            return _this.createSlide(html, slideClassList, el).insertAfter(index);\n        }\n    };\n    _this.removeSlide = function (index) {\n        if (_this.slides[index]) {\n            if (params.loop) {\n                if (!_this.slides[index + _this.loopedSlides]) return false;\n                _this.slides[index + _this.loopedSlides].remove();\n                _this.removeLoopedSlides();\n                _this.calcSlides();\n                _this.createLoop();\n            }\n            else _this.slides[index].remove();\n            return true;\n        }\n        else return false;\n    };\n    _this.removeLastSlide = function () {\n        if (_this.slides.length > 0) {\n            if (params.loop) {\n                _this.slides[_this.slides.length - 1 - _this.loopedSlides].remove();\n                _this.removeLoopedSlides();\n                _this.calcSlides();\n                _this.createLoop();\n            }\n            else _this.slides[_this.slides.length - 1].remove();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    _this.removeAllSlides = function () {\n        var num = _this.slides.length;\n        for (var i = _this.slides.length - 1; i >= 0; i--) {\n            _this.slides[i].remove();\n            if (i === num - 1) {\n                _this.setWrapperTranslate(0);\n            }\n        }\n    };\n    _this.getSlide = function (index) {\n        return _this.slides[index];\n    };\n    _this.getLastSlide = function () {\n        return _this.slides[_this.slides.length - 1];\n    };\n    _this.getFirstSlide = function () {\n        return _this.slides[0];\n    };\n\n    //Currently Active Slide\n    _this.activeSlide = function () {\n        return _this.slides[_this.activeIndex];\n    };\n\n    /*=========================\n     Wrapper for Callbacks : Allows additive callbacks via function arrays\n     ===========================*/\n    _this.fireCallback = function () {\n        var callback = arguments[0];\n        if (Object.prototype.toString.call(callback) === '[object Array]') {\n            for (var i = 0; i < callback.length; i++) {\n                if (typeof callback[i] === 'function') {\n                    callback[i](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n                }\n            }\n        } else if (Object.prototype.toString.call(callback) === '[object String]') {\n            if (params['on' + callback]) _this.fireCallback(params['on' + callback], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n        } else {\n            callback(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n        }\n    };\n    function isArray(obj) {\n        if (Object.prototype.toString.apply(obj) === '[object Array]') return true;\n        return false;\n    }\n\n    /**\n     * Allows user to add callbacks, rather than replace them\n     * @param callback\n     * @param func\n     * @return {*}\n     */\n    _this.addCallback = function (callback, func) {\n        var _this = this, tempFunc;\n        if (_this.params['on' + callback]) {\n            if (isArray(this.params['on' + callback])) {\n                return this.params['on' + callback].push(func);\n            } else if (typeof this.params['on' + callback] === 'function') {\n                tempFunc = this.params['on' + callback];\n                this.params['on' + callback] = [];\n                this.params['on' + callback].push(tempFunc);\n                return this.params['on' + callback].push(func);\n            }\n        } else {\n            this.params['on' + callback] = [];\n            return this.params['on' + callback].push(func);\n        }\n    };\n    _this.removeCallbacks = function (callback) {\n        if (_this.params['on' + callback]) {\n            _this.params['on' + callback] = null;\n        }\n    };\n\n    /*=========================\n      Plugins API\n      ===========================*/\n    var _plugins = [];\n    for (var plugin in _this.plugins) {\n        if (params[plugin]) {\n            var p = _this.plugins[plugin](_this, params[plugin]);\n            if (p) _plugins.push(p);\n        }\n    }\n    _this.callPlugins = function (method, args) {\n        if (!args) args = {};\n        for (var i = 0; i < _plugins.length; i++) {\n            if (method in _plugins[i]) {\n                _plugins[i][method](args);\n            }\n        }\n    };\n\n    /*=========================\n      Windows Phone 8 Fix\n      ===========================*/\n    if ((_this.browser.ie10 || _this.browser.ie11) && !params.onlyExternal) {\n        _this.wrapper.classList.add('swiper-wp8-' + (isH ? 'horizontal' : 'vertical'));\n    }\n\n    /*=========================\n      Free Mode Class\n      ===========================*/\n    if (params.freeMode) {\n        _this.container.className += ' swiper-free-mode';\n    }\n\n    /*==================================================\n        Init/Re-init/Resize Fix\n    ====================================================*/\n    _this.initialized = false;\n    _this.init = function (force, forceCalcSlides) {\n        var _width = _this.h.getWidth(_this.container, false, params.roundLengths);\n        var _height = _this.h.getHeight(_this.container, false, params.roundLengths);\n        if (_width === _this.width && _height === _this.height && !force) return;\n\n        _this.width = _width;\n        _this.height = _height;\n\n        var slideWidth, slideHeight, slideMaxHeight, wrapperWidth, wrapperHeight, slideLeft;\n        var i; // loop index variable to avoid JSHint W004 / W038\n        containerSize = isH ? _width : _height;\n        var wrapper = _this.wrapper;\n\n        if (force) {\n            _this.calcSlides(forceCalcSlides);\n        }\n\n        if (params.slidesPerView === 'auto') {\n            //Auto mode\n            var slidesWidth = 0;\n            var slidesHeight = 0;\n\n            //Unset Styles\n            if (params.slidesOffset > 0) {\n                wrapper.style.paddingLeft = '';\n                wrapper.style.paddingRight = '';\n                wrapper.style.paddingTop = '';\n                wrapper.style.paddingBottom = '';\n            }\n            wrapper.style.width = '';\n            wrapper.style.height = '';\n            if (params.offsetPxBefore > 0) {\n                if (isH) _this.wrapperLeft = params.offsetPxBefore;\n                else _this.wrapperTop = params.offsetPxBefore;\n            }\n            if (params.offsetPxAfter > 0) {\n                if (isH) _this.wrapperRight = params.offsetPxAfter;\n                else _this.wrapperBottom = params.offsetPxAfter;\n            }\n\n            if (params.centeredSlides) {\n                if (isH) {\n                    _this.wrapperLeft = (containerSize - this.slides[0].getWidth(true, params.roundLengths)) / 2;\n                    _this.wrapperRight = (containerSize - _this.slides[_this.slides.length - 1].getWidth(true, params.roundLengths)) / 2;\n                }\n                else {\n                    _this.wrapperTop = (containerSize - _this.slides[0].getHeight(true, params.roundLengths)) / 2;\n                    _this.wrapperBottom = (containerSize - _this.slides[_this.slides.length - 1].getHeight(true, params.roundLengths)) / 2;\n                }\n            }\n\n            if (isH) {\n                if (_this.wrapperLeft >= 0) wrapper.style.paddingLeft = _this.wrapperLeft + 'px';\n                if (_this.wrapperRight >= 0) wrapper.style.paddingRight = _this.wrapperRight + 'px';\n            }\n            else {\n                if (_this.wrapperTop >= 0) wrapper.style.paddingTop = _this.wrapperTop + 'px';\n                if (_this.wrapperBottom >= 0) wrapper.style.paddingBottom = _this.wrapperBottom + 'px';\n            }\n            slideLeft = 0;\n            var centeredSlideLeft = 0;\n            _this.snapGrid = [];\n            _this.slidesGrid = [];\n\n            slideMaxHeight = 0;\n            for (i = 0; i < _this.slides.length; i++) {\n                slideWidth = _this.slides[i].getWidth(true, params.roundLengths);\n                slideHeight = _this.slides[i].getHeight(true, params.roundLengths);\n                if (params.calculateHeight) {\n                    slideMaxHeight = Math.max(slideMaxHeight, slideHeight);\n                }\n                var _slideSize = isH ? slideWidth : slideHeight;\n                if (params.centeredSlides) {\n                    var nextSlideWidth = i === _this.slides.length - 1 ? 0 : _this.slides[i + 1].getWidth(true, params.roundLengths);\n                    var nextSlideHeight = i === _this.slides.length - 1 ? 0 : _this.slides[i + 1].getHeight(true, params.roundLengths);\n                    var nextSlideSize = isH ? nextSlideWidth : nextSlideHeight;\n                    if (_slideSize > containerSize) {\n                        if (params.slidesPerViewFit) {\n                            _this.snapGrid.push(slideLeft + _this.wrapperLeft);\n                            _this.snapGrid.push(slideLeft + _slideSize - containerSize + _this.wrapperLeft);\n                        }\n                        else {\n                            for (var j = 0; j <= Math.floor(_slideSize / (containerSize + _this.wrapperLeft)); j++) {\n                                if (j === 0) _this.snapGrid.push(slideLeft + _this.wrapperLeft);\n                                else _this.snapGrid.push(slideLeft + _this.wrapperLeft + containerSize * j);\n                            }\n                        }\n                        _this.slidesGrid.push(slideLeft + _this.wrapperLeft);\n                    }\n                    else {\n                        _this.snapGrid.push(centeredSlideLeft);\n                        _this.slidesGrid.push(centeredSlideLeft);\n                    }\n                    centeredSlideLeft += _slideSize / 2 + nextSlideSize / 2;\n                }\n                else {\n                    if (_slideSize > containerSize) {\n                        if (params.slidesPerViewFit) {\n                            _this.snapGrid.push(slideLeft);\n                            _this.snapGrid.push(slideLeft + _slideSize - containerSize);\n                        }\n                        else {\n                            if (containerSize !== 0) {\n                                for (var k = 0; k <= Math.floor(_slideSize / containerSize); k++) {\n                                    _this.snapGrid.push(slideLeft + containerSize * k);\n                                }\n                            }\n                            else {\n                                _this.snapGrid.push(slideLeft);\n                            }\n                        }\n\n                    }\n                    else {\n                        _this.snapGrid.push(slideLeft);\n                    }\n                    _this.slidesGrid.push(slideLeft);\n                }\n\n                slideLeft += _slideSize;\n\n                slidesWidth += slideWidth;\n                slidesHeight += slideHeight;\n            }\n            if (params.calculateHeight) _this.height = slideMaxHeight;\n            if (isH) {\n                wrapperSize = slidesWidth + _this.wrapperRight + _this.wrapperLeft;\n                if (!params.cssWidthAndHeight || params.cssWidthAndHeight === 'height') {\n                    wrapper.style.width = (slidesWidth) + 'px';\n                }\n                if (!params.cssWidthAndHeight || params.cssWidthAndHeight === 'width') {\n                    wrapper.style.height = (_this.height) + 'px';\n                }\n            }\n            else {\n                if (!params.cssWidthAndHeight || params.cssWidthAndHeight === 'height') {\n                    wrapper.style.width = (_this.width) + 'px';\n                }\n                if (!params.cssWidthAndHeight || params.cssWidthAndHeight === 'width') {\n                    wrapper.style.height = (slidesHeight) + 'px';\n                }\n                wrapperSize = slidesHeight + _this.wrapperTop + _this.wrapperBottom;\n            }\n\n        }\n        else if (params.scrollContainer) {\n            //Scroll Container\n            wrapper.style.width = '';\n            wrapper.style.height = '';\n            wrapperWidth = _this.slides[0].getWidth(true, params.roundLengths);\n            wrapperHeight = _this.slides[0].getHeight(true, params.roundLengths);\n            wrapperSize = isH ? wrapperWidth : wrapperHeight;\n            wrapper.style.width = wrapperWidth + 'px';\n            wrapper.style.height = wrapperHeight + 'px';\n            slideSize = isH ? wrapperWidth : wrapperHeight;\n\n        }\n        else {\n            //For usual slides\n            if (params.calculateHeight) {\n                slideMaxHeight = 0;\n                wrapperHeight = 0;\n                //ResetWrapperSize\n                if (!isH) _this.container.style.height = '';\n                wrapper.style.height = '';\n\n                for (i = 0; i < _this.slides.length; i++) {\n                    //ResetSlideSize\n                    _this.slides[i].style.height = '';\n                    slideMaxHeight = Math.max(_this.slides[i].getHeight(true), slideMaxHeight);\n                    if (!isH) wrapperHeight += _this.slides[i].getHeight(true);\n                }\n                slideHeight = slideMaxHeight;\n                _this.height = slideHeight;\n\n                if (isH) wrapperHeight = slideHeight;\n                else {\n                    containerSize = slideHeight;\n                    _this.container.style.height = containerSize + 'px';\n                }\n            }\n            else {\n                slideHeight = isH ? _this.height : _this.height / params.slidesPerView;\n                if (params.roundLengths) slideHeight = Math.ceil(slideHeight);\n                wrapperHeight = isH ? _this.height : _this.slides.length * slideHeight;\n            }\n            slideWidth = isH ? _this.width / params.slidesPerView : _this.width;\n            if (params.roundLengths) slideWidth = Math.ceil(slideWidth);\n            wrapperWidth = isH ? _this.slides.length * slideWidth : _this.width;\n            slideSize = isH ? slideWidth : slideHeight;\n\n            if (params.offsetSlidesBefore > 0) {\n                if (isH) _this.wrapperLeft = slideSize * params.offsetSlidesBefore;\n                else _this.wrapperTop = slideSize * params.offsetSlidesBefore;\n            }\n            if (params.offsetSlidesAfter > 0) {\n                if (isH) _this.wrapperRight = slideSize * params.offsetSlidesAfter;\n                else _this.wrapperBottom = slideSize * params.offsetSlidesAfter;\n            }\n            if (params.offsetPxBefore > 0) {\n                if (isH) _this.wrapperLeft = params.offsetPxBefore;\n                else _this.wrapperTop = params.offsetPxBefore;\n            }\n            if (params.offsetPxAfter > 0) {\n                if (isH) _this.wrapperRight = params.offsetPxAfter;\n                else _this.wrapperBottom = params.offsetPxAfter;\n            }\n            if (params.centeredSlides) {\n                if (isH) {\n                    _this.wrapperLeft = (containerSize - slideSize) / 2;\n                    _this.wrapperRight = (containerSize - slideSize) / 2;\n                }\n                else {\n                    _this.wrapperTop = (containerSize - slideSize) / 2;\n                    _this.wrapperBottom = (containerSize - slideSize) / 2;\n                }\n            }\n            if (isH) {\n                if (_this.wrapperLeft > 0) wrapper.style.paddingLeft = _this.wrapperLeft + 'px';\n                if (_this.wrapperRight > 0) wrapper.style.paddingRight = _this.wrapperRight + 'px';\n            }\n            else {\n                if (_this.wrapperTop > 0) wrapper.style.paddingTop = _this.wrapperTop + 'px';\n                if (_this.wrapperBottom > 0) wrapper.style.paddingBottom = _this.wrapperBottom + 'px';\n            }\n\n            wrapperSize = isH ? wrapperWidth + _this.wrapperRight + _this.wrapperLeft : wrapperHeight + _this.wrapperTop + _this.wrapperBottom;\n            if (parseFloat(wrapperWidth) > 0 && (!params.cssWidthAndHeight || params.cssWidthAndHeight === 'height')) {\n                wrapper.style.width = wrapperWidth + 'px';\n            }\n            if (parseFloat(wrapperHeight) > 0 && (!params.cssWidthAndHeight || params.cssWidthAndHeight === 'width')) {\n                wrapper.style.height = wrapperHeight + 'px';\n            }\n            slideLeft = 0;\n            _this.snapGrid = [];\n            _this.slidesGrid = [];\n            for (i = 0; i < _this.slides.length; i++) {\n                _this.snapGrid.push(slideLeft);\n                _this.slidesGrid.push(slideLeft);\n                slideLeft += slideSize;\n                if (parseFloat(slideWidth) > 0 && (!params.cssWidthAndHeight || params.cssWidthAndHeight === 'height')) {\n                    _this.slides[i].style.width = slideWidth + 'px';\n                }\n                if (parseFloat(slideHeight) > 0 && (!params.cssWidthAndHeight || params.cssWidthAndHeight === 'width')) {\n                    _this.slides[i].style.height = slideHeight + 'px';\n                }\n            }\n\n        }\n\n        if (!_this.initialized) {\n            _this.callPlugins('onFirstInit');\n            if (params.onFirstInit) _this.fireCallback(params.onFirstInit, _this);\n        }\n        else {\n            _this.callPlugins('onInit');\n            if (params.onInit) _this.fireCallback(params.onInit, _this);\n        }\n        _this.initialized = true;\n    };\n\n    _this.reInit = function (forceCalcSlides) {\n        _this.init(true, forceCalcSlides);\n    };\n\n    _this.resizeFix = function (reInit) {\n        _this.callPlugins('beforeResizeFix');\n\n        _this.init(params.resizeReInit || reInit);\n\n        // swipe to active slide in fixed mode\n        if (!params.freeMode) {\n            _this.swipeTo((params.loop ? _this.activeLoopIndex : _this.activeIndex), 0, false);\n            // Fix autoplay\n            if (params.autoplay) {\n                if (_this.support.transitions && typeof autoplayTimeoutId !== 'undefined') {\n                    if (typeof autoplayTimeoutId !== 'undefined') {\n                        clearTimeout(autoplayTimeoutId);\n                        autoplayTimeoutId = undefined;\n                        _this.startAutoplay();\n                    }\n                }\n                else {\n                    if (typeof autoplayIntervalId !== 'undefined') {\n                        clearInterval(autoplayIntervalId);\n                        autoplayIntervalId = undefined;\n                        _this.startAutoplay();\n                    }\n                }\n            }\n        }\n        // move wrapper to the beginning in free mode\n        else if (_this.getWrapperTranslate() < -maxWrapperPosition()) {\n            _this.setWrapperTransition(0);\n            _this.setWrapperTranslate(-maxWrapperPosition());\n        }\n\n        _this.callPlugins('afterResizeFix');\n    };\n\n    /*==========================================\n        Max and Min Positions\n    ============================================*/\n    function maxWrapperPosition() {\n        var a = (wrapperSize - containerSize);\n        if (params.freeMode) {\n            a = wrapperSize - containerSize;\n        }\n        // if (params.loop) a -= containerSize;\n        if (params.slidesPerView > _this.slides.length && !params.centeredSlides) {\n            a = 0;\n        }\n        if (a < 0) a = 0;\n        return a;\n    }\n\n    /*==========================================\n        Event Listeners\n    ============================================*/\n    function initEvents() {\n        var bind = _this.h.addEventListener;\n        var eventTarget = params.eventTarget === 'wrapper' ? _this.wrapper : _this.container;\n        //Touch Events\n        if (! (_this.browser.ie10 || _this.browser.ie11)) {\n            if (_this.support.touch) {\n                bind(eventTarget, 'touchstart', onTouchStart);\n                bind(eventTarget, 'touchmove', onTouchMove);\n                bind(eventTarget, 'touchend', onTouchEnd);\n            }\n            if (params.simulateTouch) {\n                bind(eventTarget, 'mousedown', onTouchStart);\n                bind(document, 'mousemove', onTouchMove);\n                bind(document, 'mouseup', onTouchEnd);\n            }\n        }\n        else {\n            bind(eventTarget, _this.touchEvents.touchStart, onTouchStart);\n            bind(document, _this.touchEvents.touchMove, onTouchMove);\n            bind(document, _this.touchEvents.touchEnd, onTouchEnd);\n        }\n\n        //Resize Event\n        if (params.autoResize) {\n            bind(window, 'resize', _this.resizeFix);\n        }\n        //Slide Events\n        addSlideEvents();\n        //Mousewheel\n        _this._wheelEvent = false;\n        if (params.mousewheelControl) {\n            if (document.onmousewheel !== undefined) {\n                _this._wheelEvent = 'mousewheel';\n            }\n            if (!_this._wheelEvent) {\n                try {\n                    new WheelEvent('wheel');\n                    _this._wheelEvent = 'wheel';\n                } catch (e) {}\n            }\n            if (!_this._wheelEvent) {\n                _this._wheelEvent = 'DOMMouseScroll';\n            }\n            if (_this._wheelEvent) {\n                bind(_this.container, _this._wheelEvent, handleMousewheel);\n            }\n        }\n\n        //Keyboard\n\t\tfunction _loadImage(img) {\n\t\t\tvar image, src;\n\t\t\tvar onReady = function () {\n\t\t\t\tif (typeof _this === 'undefined' || _this === null) return;\n\t\t\t\tif (_this.imagesLoaded !== undefined) _this.imagesLoaded++;\n\t\t\t\tif (_this.imagesLoaded === _this.imagesToLoad.length) {\n\t\t\t\t\t_this.reInit();\n\t\t\t\t\tif (params.onImagesReady) _this.fireCallback(params.onImagesReady, _this);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (!img.complete) {\n\t\t\t\tsrc = (img.currentSrc || img.getAttribute('src'));\n\t\t\t\tif (src) {\n\t\t\t\t\timage = new Image();\n\t\t\t\t\timage.onload = onReady;\n\t\t\t\t\timage.onerror = onReady;\n\t\t\t\t\timage.src = src;\n\t\t\t\t} else {\n\t\t\t\t\tonReady();\n\t\t\t\t}\n\n\t\t\t} else {//image already loaded...\n\t\t\t\tonReady();\n\t\t\t}\n\t\t}\n\n\t\tif (params.keyboardControl) {\n\t\t\tbind(document, 'keydown', handleKeyboardKeys);\n\t\t}\n\t\tif (params.updateOnImagesReady) {\n\t\t\t_this.imagesToLoad = $$('img', _this.container);\n\n\t\t\tfor (var i = 0; i < _this.imagesToLoad.length; i++) {\n\t\t\t\t_loadImage(_this.imagesToLoad[i]);\n\t\t\t}\n\t\t}\n    }\n\n    //Remove Event Listeners\n    _this.destroy = function (removeStyles) {\n        var unbind = _this.h.removeEventListener;\n        var eventTarget = params.eventTarget === 'wrapper' ? _this.wrapper : _this.container;\n        //Touch Events\n        if (! (_this.browser.ie10 || _this.browser.ie11)) {\n            if (_this.support.touch) {\n                unbind(eventTarget, 'touchstart', onTouchStart);\n                unbind(eventTarget, 'touchmove', onTouchMove);\n                unbind(eventTarget, 'touchend', onTouchEnd);\n            }\n            if (params.simulateTouch) {\n                unbind(eventTarget, 'mousedown', onTouchStart);\n                unbind(document, 'mousemove', onTouchMove);\n                unbind(document, 'mouseup', onTouchEnd);\n            }\n        }\n        else {\n            unbind(eventTarget, _this.touchEvents.touchStart, onTouchStart);\n            unbind(document, _this.touchEvents.touchMove, onTouchMove);\n            unbind(document, _this.touchEvents.touchEnd, onTouchEnd);\n        }\n\n        //Resize Event\n        if (params.autoResize) {\n            unbind(window, 'resize', _this.resizeFix);\n        }\n\n        //Init Slide Events\n        removeSlideEvents();\n\n        //Pagination\n        if (params.paginationClickable) {\n            removePaginationEvents();\n        }\n\n        //Mousewheel\n        if (params.mousewheelControl && _this._wheelEvent) {\n            unbind(_this.container, _this._wheelEvent, handleMousewheel);\n        }\n\n        //Keyboard\n        if (params.keyboardControl) {\n            unbind(document, 'keydown', handleKeyboardKeys);\n        }\n\n        //Stop autoplay\n        if (params.autoplay) {\n            _this.stopAutoplay();\n        }\n        // Remove styles\n        if (removeStyles) {\n            _this.wrapper.removeAttribute('style');\n            for (var i = 0; i < _this.slides.length; i++) {\n                _this.slides[i].removeAttribute('style');\n            }\n        }\n        // Plugins\n        _this.callPlugins('onDestroy');\n\n        // Check jQuery/Zepto data\n        if (window.jQuery && window.jQuery(_this.container).data('swiper')) {\n            window.jQuery(_this.container).removeData('swiper');\n        }\n        if (window.Zepto && window.Zepto(_this.container).data('swiper')) {\n            window.Zepto(_this.container).removeData('swiper');\n        }\n\n        //Destroy variable\n        _this = null;\n    };\n\n    function addSlideEvents() {\n        var bind = _this.h.addEventListener,\n            i;\n\n        //Prevent Links Events\n        if (params.preventLinks) {\n            var links = $$('a', _this.container);\n            for (i = 0; i < links.length; i++) {\n                bind(links[i], 'click', preventClick);\n            }\n        }\n        //Release Form Elements\n        if (params.releaseFormElements) {\n            var formElements = $$('input, textarea, select', _this.container);\n            for (i = 0; i < formElements.length; i++) {\n                bind(formElements[i], _this.touchEvents.touchStart, releaseForms, true);\n                if (_this.support.touch && params.simulateTouch) {\n                    bind(formElements[i], 'mousedown', releaseForms, true);\n                }\n            }\n        }\n\n        //Slide Clicks & Touches\n        if (params.onSlideClick) {\n            for (i = 0; i < _this.slides.length; i++) {\n                bind(_this.slides[i], 'click', slideClick);\n            }\n        }\n        if (params.onSlideTouch) {\n            for (i = 0; i < _this.slides.length; i++) {\n                bind(_this.slides[i], _this.touchEvents.touchStart, slideTouch);\n            }\n        }\n    }\n    function removeSlideEvents() {\n        var unbind = _this.h.removeEventListener,\n            i;\n\n        //Slide Clicks & Touches\n        if (params.onSlideClick) {\n            for (i = 0; i < _this.slides.length; i++) {\n                unbind(_this.slides[i], 'click', slideClick);\n            }\n        }\n        if (params.onSlideTouch) {\n            for (i = 0; i < _this.slides.length; i++) {\n                unbind(_this.slides[i], _this.touchEvents.touchStart, slideTouch);\n            }\n        }\n        //Release Form Elements\n        if (params.releaseFormElements) {\n            var formElements = $$('input, textarea, select', _this.container);\n            for (i = 0; i < formElements.length; i++) {\n                unbind(formElements[i], _this.touchEvents.touchStart, releaseForms, true);\n                if (_this.support.touch && params.simulateTouch) {\n                    unbind(formElements[i], 'mousedown', releaseForms, true);\n                }\n            }\n        }\n        //Prevent Links Events\n        if (params.preventLinks) {\n            var links = $$('a', _this.container);\n            for (i = 0; i < links.length; i++) {\n                unbind(links[i], 'click', preventClick);\n            }\n        }\n    }\n    /*==========================================\n        Keyboard Control\n    ============================================*/\n    function handleKeyboardKeys(e) {\n        var kc = e.keyCode || e.charCode;\n        if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) return;\n        if (kc === 37 || kc === 39 || kc === 38 || kc === 40) {\n            var inView = false;\n            //Check that swiper should be inside of visible area of window\n            var swiperOffset = _this.h.getOffset(_this.container);\n            var scrollLeft = _this.h.windowScroll().left;\n            var scrollTop = _this.h.windowScroll().top;\n            var windowWidth = _this.h.windowWidth();\n            var windowHeight = _this.h.windowHeight();\n            var swiperCoord = [\n                [swiperOffset.left, swiperOffset.top],\n                [swiperOffset.left + _this.width, swiperOffset.top],\n                [swiperOffset.left, swiperOffset.top + _this.height],\n                [swiperOffset.left + _this.width, swiperOffset.top + _this.height]\n            ];\n            for (var i = 0; i < swiperCoord.length; i++) {\n                var point = swiperCoord[i];\n                if (\n                    point[0] >= scrollLeft && point[0] <= scrollLeft + windowWidth &&\n                    point[1] >= scrollTop && point[1] <= scrollTop + windowHeight\n                ) {\n                    inView = true;\n                }\n\n            }\n            if (!inView) return;\n        }\n        if (isH) {\n            if (kc === 37 || kc === 39) {\n                if (e.preventDefault) e.preventDefault();\n                else e.returnValue = false;\n            }\n            if (kc === 39) _this.swipeNext();\n            if (kc === 37) _this.swipePrev();\n        }\n        else {\n            if (kc === 38 || kc === 40) {\n                if (e.preventDefault) e.preventDefault();\n                else e.returnValue = false;\n            }\n            if (kc === 40) _this.swipeNext();\n            if (kc === 38) _this.swipePrev();\n        }\n    }\n\n    _this.disableKeyboardControl = function () {\n        params.keyboardControl = false;\n        _this.h.removeEventListener(document, 'keydown', handleKeyboardKeys);\n    };\n\n    _this.enableKeyboardControl = function () {\n        params.keyboardControl = true;\n        _this.h.addEventListener(document, 'keydown', handleKeyboardKeys);\n    };\n\n    /*==========================================\n        Mousewheel Control\n    ============================================*/\n    var lastScrollTime = (new Date()).getTime();\n    function handleMousewheel(e) {\n        var we = _this._wheelEvent;\n        var delta = 0;\n\n        //Opera & IE\n        if (e.detail) delta = -e.detail;\n        //WebKits\n        else if (we === 'mousewheel') {\n            if (params.mousewheelControlForceToAxis) {\n                if (isH) {\n                    if (Math.abs(e.wheelDeltaX) > Math.abs(e.wheelDeltaY)) delta = e.wheelDeltaX;\n                    else return;\n                }\n                else {\n                    if (Math.abs(e.wheelDeltaY) > Math.abs(e.wheelDeltaX)) delta = e.wheelDeltaY;\n                    else return;\n                }\n            }\n            else {\n                delta = e.wheelDelta;\n            }\n        }\n        //Old FireFox\n        else if (we === 'DOMMouseScroll') delta = -e.detail;\n        //New FireFox\n        else if (we === 'wheel') {\n            if (params.mousewheelControlForceToAxis) {\n                if (isH) {\n                    if (Math.abs(e.deltaX) > Math.abs(e.deltaY)) delta = -e.deltaX;\n                    else return;\n                }\n                else {\n                    if (Math.abs(e.deltaY) > Math.abs(e.deltaX)) delta = -e.deltaY;\n                    else return;\n                }\n            }\n            else {\n                delta = Math.abs(e.deltaX) > Math.abs(e.deltaY) ? - e.deltaX : - e.deltaY;\n            }\n        }\n\n        if (!params.freeMode) {\n            if ((new Date()).getTime() - lastScrollTime > 60) {\n                if (delta < 0) _this.swipeNext();\n                else _this.swipePrev();\n            }\n            lastScrollTime = (new Date()).getTime();\n\n        }\n        else {\n            //Freemode or scrollContainer:\n            var position = _this.getWrapperTranslate() + delta;\n\n            if (position > 0) position = 0;\n            if (position < -maxWrapperPosition()) position = -maxWrapperPosition();\n\n            _this.setWrapperTransition(0);\n            _this.setWrapperTranslate(position);\n            _this.updateActiveSlide(position);\n\n            // Return page scroll on edge positions\n            if (position === 0 || position === -maxWrapperPosition()) return;\n        }\n        if (params.autoplay) _this.stopAutoplay(true);\n\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n        return false;\n    }\n    _this.disableMousewheelControl = function () {\n        if (!_this._wheelEvent) return false;\n        params.mousewheelControl = false;\n        _this.h.removeEventListener(_this.container, _this._wheelEvent, handleMousewheel);\n        return true;\n    };\n\n    _this.enableMousewheelControl = function () {\n        if (!_this._wheelEvent) return false;\n        params.mousewheelControl = true;\n        _this.h.addEventListener(_this.container, _this._wheelEvent, handleMousewheel);\n        return true;\n    };\n\n    /*=========================\n      Grab Cursor\n      ===========================*/\n    if (params.grabCursor) {\n        var containerStyle = _this.container.style;\n        containerStyle.cursor = 'move';\n        containerStyle.cursor = 'grab';\n        containerStyle.cursor = '-moz-grab';\n        containerStyle.cursor = '-webkit-grab';\n    }\n\n    /*=========================\n      Slides Events Handlers\n      ===========================*/\n\n    _this.allowSlideClick = true;\n    function slideClick(event) {\n        if (_this.allowSlideClick) {\n            setClickedSlide(event);\n            _this.fireCallback(params.onSlideClick, _this, event);\n        }\n    }\n\n    function slideTouch(event) {\n        setClickedSlide(event);\n        _this.fireCallback(params.onSlideTouch, _this, event);\n    }\n\n    function setClickedSlide(event) {\n\n        // IE 6-8 support\n        if (!event.currentTarget) {\n            var element = event.srcElement;\n            do {\n                if (element.className.indexOf(params.slideClass) > -1) {\n                    break;\n                }\n                element = element.parentNode;\n            } while (element);\n            _this.clickedSlide = element;\n        }\n        else {\n            _this.clickedSlide = event.currentTarget;\n        }\n\n        _this.clickedSlideIndex     = _this.slides.indexOf(_this.clickedSlide);\n        _this.clickedSlideLoopIndex = _this.clickedSlideIndex - (_this.loopedSlides || 0);\n    }\n\n    _this.allowLinks = true;\n    function preventClick(e) {\n        if (!_this.allowLinks) {\n            if (e.preventDefault) e.preventDefault();\n            else e.returnValue = false;\n            if (params.preventLinksPropagation && 'stopPropagation' in e) {\n                e.stopPropagation();\n            }\n            return false;\n        }\n    }\n    function releaseForms(e) {\n        if (e.stopPropagation) e.stopPropagation();\n        else e.returnValue = false;\n        return false;\n\n    }\n\n    /*==================================================\n        Event Handlers\n    ====================================================*/\n    var isTouchEvent = false;\n    var allowThresholdMove;\n    var allowMomentumBounce = true;\n    function onTouchStart(event) {\n        if (params.preventLinks) _this.allowLinks = true;\n        //Exit if slider is already was touched\n        if (_this.isTouched || params.onlyExternal) {\n            return false;\n        }\n\n        // Blur active elements\n        var eventTarget = event.target || event.srcElement;\n        if (document.activeElement && document.activeElement !== document.body) {\n            if (document.activeElement !== eventTarget) document.activeElement.blur();\n        }\n\n        // Form tag names\n        var formTagNames = ('input select textarea').split(' ');\n\n        // Check for no swiping\n        if (params.noSwiping && (eventTarget) && noSwipingSlide(eventTarget)) return false;\n        allowMomentumBounce = false;\n        //Check For Nested Swipers\n        _this.isTouched = true;\n        isTouchEvent = event.type === 'touchstart';\n\n        // prevent user enter with right and the swiper move (needs isTouchEvent)\n        if (!isTouchEvent && 'which' in event && event.which === 3) {\n            _this.isTouched = false;\n            return false;\n        }\n\n        if (!isTouchEvent || event.targetTouches.length === 1) {\n            _this.callPlugins('onTouchStartBegin');\n            if (!isTouchEvent && !_this.isAndroid && formTagNames.indexOf(eventTarget.tagName.toLowerCase()) < 0) {\n\n                if (event.preventDefault) event.preventDefault();\n                else event.returnValue = false;\n            }\n\n            var pageX = isTouchEvent ? event.targetTouches[0].pageX : (event.pageX || event.clientX);\n            var pageY = isTouchEvent ? event.targetTouches[0].pageY : (event.pageY || event.clientY);\n\n            //Start Touches to check the scrolling\n            _this.touches.startX = _this.touches.currentX = pageX;\n            _this.touches.startY = _this.touches.currentY = pageY;\n\n            _this.touches.start = _this.touches.current = isH ? pageX : pageY;\n\n            //Set Transition Time to 0\n            _this.setWrapperTransition(0);\n\n            //Get Start Translate Position\n            _this.positions.start = _this.positions.current = _this.getWrapperTranslate();\n\n            //Set Transform\n            _this.setWrapperTranslate(_this.positions.start);\n\n            //TouchStartTime\n            _this.times.start = (new Date()).getTime();\n\n            //Unset Scrolling\n            isScrolling = undefined;\n\n            //Set Treshold\n            if (params.moveStartThreshold > 0) {\n                allowThresholdMove = false;\n            }\n\n            //CallBack\n            if (params.onTouchStart) _this.fireCallback(params.onTouchStart, _this, event);\n            _this.callPlugins('onTouchStartEnd');\n\n        }\n    }\n    var velocityPrevPosition, velocityPrevTime;\n    function onTouchMove(event) {\n        // If slider is not touched - exit\n        if (!_this.isTouched || params.onlyExternal) return;\n        if (isTouchEvent && event.type === 'mousemove') return;\n\n        var pageX = isTouchEvent ? event.targetTouches[0].pageX : (event.pageX || event.clientX);\n        var pageY = isTouchEvent ? event.targetTouches[0].pageY : (event.pageY || event.clientY);\n\n        //check for scrolling\n        if (typeof isScrolling === 'undefined' && isH) {\n            isScrolling = !!(isScrolling || Math.abs(pageY - _this.touches.startY) > Math.abs(pageX - _this.touches.startX));\n        }\n        if (typeof isScrolling === 'undefined' && !isH) {\n            isScrolling = !!(isScrolling || Math.abs(pageY - _this.touches.startY) < Math.abs(pageX - _this.touches.startX));\n        }\n        if (isScrolling) {\n            _this.isTouched = false;\n            return;\n        }\n\n        // One way swipes\n        if (isH) {\n            if ((!params.swipeToNext && pageX < _this.touches.startX) || ((!params.swipeToPrev && pageX > _this.touches.startX))) {\n                return;\n            }\n        }\n        else {\n            if ((!params.swipeToNext && pageY < _this.touches.startY) || ((!params.swipeToPrev && pageY > _this.touches.startY))) {\n                return;\n            }\n        }\n\n        //Check For Nested Swipers\n        if (event.assignedToSwiper) {\n            _this.isTouched = false;\n            return;\n        }\n        event.assignedToSwiper = true;\n\n        //Block inner links\n        if (params.preventLinks) {\n            _this.allowLinks = false;\n        }\n        if (params.onSlideClick) {\n            _this.allowSlideClick = false;\n        }\n\n        //Stop AutoPlay if exist\n        if (params.autoplay) {\n            _this.stopAutoplay(true);\n        }\n        if (!isTouchEvent || event.touches.length === 1) {\n\n            //Moved Flag\n            if (!_this.isMoved) {\n                _this.callPlugins('onTouchMoveStart');\n\n                if (params.loop) {\n                    _this.fixLoop();\n                    _this.positions.start = _this.getWrapperTranslate();\n                }\n                if (params.onTouchMoveStart) _this.fireCallback(params.onTouchMoveStart, _this);\n            }\n            _this.isMoved = true;\n\n            // cancel event\n            if (event.preventDefault) event.preventDefault();\n            else event.returnValue = false;\n\n            _this.touches.current = isH ? pageX : pageY;\n\n            _this.positions.current = (_this.touches.current - _this.touches.start) * params.touchRatio + _this.positions.start;\n\n            //Resistance Callbacks\n            if (_this.positions.current > 0 && params.onResistanceBefore) {\n                _this.fireCallback(params.onResistanceBefore, _this, _this.positions.current);\n            }\n            if (_this.positions.current < -maxWrapperPosition() && params.onResistanceAfter) {\n                _this.fireCallback(params.onResistanceAfter, _this, Math.abs(_this.positions.current + maxWrapperPosition()));\n            }\n            //Resistance\n            if (params.resistance && params.resistance !== '100%') {\n                var resistance;\n                //Resistance for Negative-Back sliding\n                if (_this.positions.current > 0) {\n                    resistance = 1 - _this.positions.current / containerSize / 2;\n                    if (resistance < 0.5)\n                        _this.positions.current = (containerSize / 2);\n                    else\n                        _this.positions.current = _this.positions.current * resistance;\n                }\n                //Resistance for After-End Sliding\n                if (_this.positions.current < -maxWrapperPosition()) {\n\n                    var diff = (_this.touches.current - _this.touches.start) * params.touchRatio + (maxWrapperPosition() + _this.positions.start);\n                    resistance = (containerSize + diff) / (containerSize);\n                    var newPos = _this.positions.current - diff * (1 - resistance) / 2;\n                    var stopPos = -maxWrapperPosition() - containerSize / 2;\n\n                    if (newPos < stopPos || resistance <= 0)\n                        _this.positions.current = stopPos;\n                    else\n                        _this.positions.current = newPos;\n                }\n            }\n            if (params.resistance && params.resistance === '100%') {\n                //Resistance for Negative-Back sliding\n                if (_this.positions.current > 0 && !(params.freeMode && !params.freeModeFluid)) {\n                    _this.positions.current = 0;\n                }\n                //Resistance for After-End Sliding\n                if (_this.positions.current < -maxWrapperPosition() && !(params.freeMode && !params.freeModeFluid)) {\n                    _this.positions.current = -maxWrapperPosition();\n                }\n            }\n            //Move Slides\n            if (!params.followFinger) return;\n\n            if (!params.moveStartThreshold) {\n                _this.setWrapperTranslate(_this.positions.current);\n            }\n            else {\n                if (Math.abs(_this.touches.current - _this.touches.start) > params.moveStartThreshold || allowThresholdMove) {\n                    if (!allowThresholdMove) {\n                        allowThresholdMove = true;\n                        _this.touches.start = _this.touches.current;\n                        return;\n                    }\n                    _this.setWrapperTranslate(_this.positions.current);\n                }\n                else {\n                    _this.positions.current = _this.positions.start;\n                }\n            }\n\n            if (params.freeMode || params.watchActiveIndex) {\n                _this.updateActiveSlide(_this.positions.current);\n            }\n\n            //Grab Cursor\n            if (params.grabCursor) {\n                _this.container.style.cursor = 'move';\n                _this.container.style.cursor = 'grabbing';\n                _this.container.style.cursor = '-moz-grabbin';\n                _this.container.style.cursor = '-webkit-grabbing';\n            }\n            //Velocity\n            if (!velocityPrevPosition) velocityPrevPosition = _this.touches.current;\n            if (!velocityPrevTime) velocityPrevTime = (new Date()).getTime();\n            _this.velocity = (_this.touches.current - velocityPrevPosition) / ((new Date()).getTime() - velocityPrevTime) / 2;\n            if (Math.abs(_this.touches.current - velocityPrevPosition) < 2) _this.velocity = 0;\n            velocityPrevPosition = _this.touches.current;\n            velocityPrevTime = (new Date()).getTime();\n            //Callbacks\n            _this.callPlugins('onTouchMoveEnd');\n            if (params.onTouchMove) _this.fireCallback(params.onTouchMove, _this, event);\n\n            return false;\n        }\n    }\n    function onTouchEnd(event) {\n        //Check For scrolling\n        if (isScrolling) {\n            _this.swipeReset();\n        }\n        // If slider is not touched exit\n        if (params.onlyExternal || !_this.isTouched) return;\n        _this.isTouched = false;\n\n        //Return Grab Cursor\n        if (params.grabCursor) {\n            _this.container.style.cursor = 'move';\n            _this.container.style.cursor = 'grab';\n            _this.container.style.cursor = '-moz-grab';\n            _this.container.style.cursor = '-webkit-grab';\n        }\n\n        //Check for Current Position\n        if (!_this.positions.current && _this.positions.current !== 0) {\n            _this.positions.current = _this.positions.start;\n        }\n\n        //For case if slider touched but not moved\n        if (params.followFinger) {\n            _this.setWrapperTranslate(_this.positions.current);\n        }\n\n        // TouchEndTime\n        _this.times.end = (new Date()).getTime();\n\n        //Difference\n        _this.touches.diff = _this.touches.current - _this.touches.start;\n        _this.touches.abs = Math.abs(_this.touches.diff);\n\n        _this.positions.diff = _this.positions.current - _this.positions.start;\n        _this.positions.abs = Math.abs(_this.positions.diff);\n\n        var diff = _this.positions.diff;\n        var diffAbs = _this.positions.abs;\n        var timeDiff = _this.times.end - _this.times.start;\n\n        if (diffAbs < 5 && (timeDiff) < 300 && _this.allowLinks === false) {\n            if (!params.freeMode && diffAbs !== 0) _this.swipeReset();\n            //Release inner links\n            if (params.preventLinks) {\n                _this.allowLinks = true;\n            }\n            if (params.onSlideClick) {\n                _this.allowSlideClick = true;\n            }\n        }\n\n        setTimeout(function () {\n            //Release inner links\n            if (typeof _this === 'undefined' || _this === null) return;\n            if (params.preventLinks) {\n                _this.allowLinks = true;\n            }\n            if (params.onSlideClick) {\n                _this.allowSlideClick = true;\n            }\n        }, 100);\n\n        var maxPosition = maxWrapperPosition();\n\n        //Not moved or Prevent Negative Back Sliding/After-End Sliding\n        if (!_this.isMoved && params.freeMode) {\n            _this.isMoved = false;\n            if (params.onTouchEnd) _this.fireCallback(params.onTouchEnd, _this, event);\n            _this.callPlugins('onTouchEnd');\n            return;\n        }\n        if (!_this.isMoved || _this.positions.current > 0 || _this.positions.current < -maxPosition) {\n            _this.swipeReset();\n            if (params.onTouchEnd) _this.fireCallback(params.onTouchEnd, _this, event);\n            _this.callPlugins('onTouchEnd');\n            return;\n        }\n\n        _this.isMoved = false;\n\n        //Free Mode\n        if (params.freeMode) {\n            if (params.freeModeFluid) {\n                var momentumDuration = 1000 * params.momentumRatio;\n                var momentumDistance = _this.velocity * momentumDuration;\n                var newPosition = _this.positions.current + momentumDistance;\n                var doBounce = false;\n                var afterBouncePosition;\n                var bounceAmount = Math.abs(_this.velocity) * 20 * params.momentumBounceRatio;\n                if (newPosition < -maxPosition) {\n                    if (params.momentumBounce && _this.support.transitions) {\n                        if (newPosition + maxPosition < -bounceAmount) newPosition = -maxPosition - bounceAmount;\n                        afterBouncePosition = -maxPosition;\n                        doBounce = true;\n                        allowMomentumBounce = true;\n                    }\n                    else newPosition = -maxPosition;\n                }\n                if (newPosition > 0) {\n                    if (params.momentumBounce && _this.support.transitions) {\n                        if (newPosition > bounceAmount) newPosition = bounceAmount;\n                        afterBouncePosition = 0;\n                        doBounce = true;\n                        allowMomentumBounce = true;\n                    }\n                    else newPosition = 0;\n                }\n                //Fix duration\n                if (_this.velocity !== 0) momentumDuration = Math.abs((newPosition - _this.positions.current) / _this.velocity);\n\n                _this.setWrapperTranslate(newPosition);\n\n                _this.setWrapperTransition(momentumDuration);\n\n                if (params.momentumBounce && doBounce) {\n                    _this.wrapperTransitionEnd(function () {\n                        if (!allowMomentumBounce) return;\n                        if (params.onMomentumBounce) _this.fireCallback(params.onMomentumBounce, _this);\n                        _this.callPlugins('onMomentumBounce');\n\n                        _this.setWrapperTranslate(afterBouncePosition);\n                        _this.setWrapperTransition(300);\n                    });\n                }\n\n                _this.updateActiveSlide(newPosition);\n            }\n            if (!params.freeModeFluid || timeDiff >= 300) _this.updateActiveSlide(_this.positions.current);\n\n            if (params.onTouchEnd) _this.fireCallback(params.onTouchEnd, _this, event);\n            _this.callPlugins('onTouchEnd');\n            return;\n        }\n\n        //Direction\n        direction = diff < 0 ? 'toNext' : 'toPrev';\n\n        //Short Touches\n        if (direction === 'toNext' && (timeDiff <= 300)) {\n            if (diffAbs < 30 || !params.shortSwipes) _this.swipeReset();\n            else _this.swipeNext(true, true);\n        }\n\n        if (direction === 'toPrev' && (timeDiff <= 300)) {\n            if (diffAbs < 30 || !params.shortSwipes) _this.swipeReset();\n            else _this.swipePrev(true, true);\n        }\n\n        //Long Touches\n        var targetSlideSize = 0;\n        if (params.slidesPerView === 'auto') {\n            //Define current slide's width\n            var currentPosition = Math.abs(_this.getWrapperTranslate());\n            var slidesOffset = 0;\n            var _slideSize;\n            for (var i = 0; i < _this.slides.length; i++) {\n                _slideSize = isH ? _this.slides[i].getWidth(true, params.roundLengths) : _this.slides[i].getHeight(true, params.roundLengths);\n                slidesOffset += _slideSize;\n                if (slidesOffset > currentPosition) {\n                    targetSlideSize = _slideSize;\n                    break;\n                }\n            }\n            if (targetSlideSize > containerSize) targetSlideSize = containerSize;\n        }\n        else {\n            targetSlideSize = slideSize * params.slidesPerView;\n        }\n        if (direction === 'toNext' && (timeDiff > 300)) {\n            if (diffAbs >= targetSlideSize * params.longSwipesRatio) {\n                _this.swipeNext(true, true);\n            }\n            else {\n                _this.swipeReset();\n            }\n        }\n        if (direction === 'toPrev' && (timeDiff > 300)) {\n            if (diffAbs >= targetSlideSize * params.longSwipesRatio) {\n                _this.swipePrev(true, true);\n            }\n            else {\n                _this.swipeReset();\n            }\n        }\n        if (params.onTouchEnd) _this.fireCallback(params.onTouchEnd, _this, event);\n        _this.callPlugins('onTouchEnd');\n    }\n\n\n    /*==================================================\n        noSwiping Bubble Check by Isaac Strack\n    ====================================================*/\n    function hasClass(el, classname) {\n        return el && el.getAttribute('class') && el.getAttribute('class').indexOf(classname) > -1;\n    }\n    function noSwipingSlide(el) {\n        /*This function is specifically designed to check the parent elements for the noSwiping class, up to the wrapper.\n        We need to check parents because while onTouchStart bubbles, _this.isTouched is checked in onTouchStart, which stops the bubbling.\n        So, if a text box, for example, is the initial target, and the parent slide container has the noSwiping class, the _this.isTouched\n        check will never find it, and what was supposed to be noSwiping is able to be swiped.\n        This function will iterate up and check for the noSwiping class in parents, up through the wrapperClass.*/\n\n        // First we create a truthy variable, which is that swiping is allowd (noSwiping = false)\n        var noSwiping = false;\n\n        // Now we iterate up (parentElements) until we reach the node with the wrapperClass.\n        do {\n\n            // Each time, we check to see if there's a 'swiper-no-swiping' class (noSwipingClass).\n            if (hasClass(el, params.noSwipingClass))\n            {\n                noSwiping = true; // If there is, we set noSwiping = true;\n            }\n\n            el = el.parentElement;  // now we iterate up (parent node)\n\n        } while (!noSwiping && el.parentElement && !hasClass(el, params.wrapperClass)); // also include el.parentElement truthy, just in case.\n\n        // because we didn't check the wrapper itself, we do so now, if noSwiping is false:\n        if (!noSwiping && hasClass(el, params.wrapperClass) && hasClass(el, params.noSwipingClass))\n            noSwiping = true; // if the wrapper has the noSwipingClass, we set noSwiping = true;\n\n        return noSwiping;\n    }\n\n    function addClassToHtmlString(klass, outerHtml) {\n        var par = document.createElement('div');\n        var child;\n\n        par.innerHTML = outerHtml;\n        child = par.firstChild;\n        child.className += ' ' + klass;\n\n        return child.outerHTML;\n    }\n\n\n    /*==================================================\n        Swipe Functions\n    ====================================================*/\n    _this.swipeNext = function (runCallbacks, internal) {\n        if (typeof runCallbacks === 'undefined') runCallbacks = true;\n        if (!internal && params.loop) _this.fixLoop();\n        if (!internal && params.autoplay) _this.stopAutoplay(true);\n        _this.callPlugins('onSwipeNext');\n        var currentPosition = _this.getWrapperTranslate().toFixed(2);\n        var newPosition = currentPosition;\n        if (params.slidesPerView === 'auto') {\n            for (var i = 0; i < _this.snapGrid.length; i++) {\n                if (-currentPosition >= _this.snapGrid[i].toFixed(2) && -currentPosition < _this.snapGrid[i + 1].toFixed(2)) {\n                    newPosition = -_this.snapGrid[i + 1];\n                    break;\n                }\n            }\n        }\n        else {\n            var groupSize = slideSize * params.slidesPerGroup;\n            newPosition = -(Math.floor(Math.abs(currentPosition) / Math.floor(groupSize)) * groupSize + groupSize);\n        }\n        if (newPosition < -maxWrapperPosition()) {\n            newPosition = -maxWrapperPosition();\n        }\n        if (newPosition === currentPosition) return false;\n        swipeToPosition(newPosition, 'next', {runCallbacks: runCallbacks});\n        return true;\n    };\n    _this.swipePrev = function (runCallbacks, internal) {\n        if (typeof runCallbacks === 'undefined') runCallbacks = true;\n        if (!internal && params.loop) _this.fixLoop();\n        if (!internal && params.autoplay) _this.stopAutoplay(true);\n        _this.callPlugins('onSwipePrev');\n\n        var currentPosition = Math.ceil(_this.getWrapperTranslate());\n        var newPosition;\n        if (params.slidesPerView === 'auto') {\n            newPosition = 0;\n            for (var i = 1; i < _this.snapGrid.length; i++) {\n                if (-currentPosition === _this.snapGrid[i]) {\n                    newPosition = -_this.snapGrid[i - 1];\n                    break;\n                }\n                if (-currentPosition > _this.snapGrid[i] && -currentPosition < _this.snapGrid[i + 1]) {\n                    newPosition = -_this.snapGrid[i];\n                    break;\n                }\n            }\n        }\n        else {\n            var groupSize = slideSize * params.slidesPerGroup;\n            newPosition = -(Math.ceil(-currentPosition / groupSize) - 1) * groupSize;\n        }\n\n        if (newPosition > 0) newPosition = 0;\n\n        if (newPosition === currentPosition) return false;\n        swipeToPosition(newPosition, 'prev', {runCallbacks: runCallbacks});\n        return true;\n\n    };\n    _this.swipeReset = function (runCallbacks) {\n        if (typeof runCallbacks === 'undefined') runCallbacks = true;\n        _this.callPlugins('onSwipeReset');\n        var currentPosition = _this.getWrapperTranslate();\n        var groupSize = slideSize * params.slidesPerGroup;\n        var newPosition;\n        var maxPosition = -maxWrapperPosition();\n        if (params.slidesPerView === 'auto') {\n            newPosition = 0;\n            for (var i = 0; i < _this.snapGrid.length; i++) {\n                if (-currentPosition === _this.snapGrid[i]) return;\n                if (-currentPosition >= _this.snapGrid[i] && -currentPosition < _this.snapGrid[i + 1]) {\n                    if (_this.positions.diff > 0) newPosition = -_this.snapGrid[i + 1];\n                    else newPosition = -_this.snapGrid[i];\n                    break;\n                }\n            }\n            if (-currentPosition >= _this.snapGrid[_this.snapGrid.length - 1]) newPosition = -_this.snapGrid[_this.snapGrid.length - 1];\n            if (currentPosition <= -maxWrapperPosition()) newPosition = -maxWrapperPosition();\n        }\n        else {\n            newPosition = currentPosition < 0 ? Math.round(currentPosition / groupSize) * groupSize : 0;\n            if (currentPosition <= -maxWrapperPosition()) newPosition = -maxWrapperPosition();\n        }\n        if (params.scrollContainer)  {\n            newPosition = currentPosition < 0 ? currentPosition : 0;\n        }\n        if (newPosition < -maxWrapperPosition()) {\n            newPosition = -maxWrapperPosition();\n        }\n        if (params.scrollContainer && (containerSize > slideSize)) {\n            newPosition = 0;\n        }\n\n        if (newPosition === currentPosition) return false;\n\n        swipeToPosition(newPosition, 'reset', {runCallbacks: runCallbacks});\n        return true;\n    };\n\n    _this.swipeTo = function (index, speed, runCallbacks) {\n        index = parseInt(index, 10);\n        _this.callPlugins('onSwipeTo', {index: index, speed: speed});\n        if (params.loop) index = index + _this.loopedSlides;\n        var currentPosition = _this.getWrapperTranslate();\n        if (!isFinite(index) || index > (_this.slides.length - 1) || index < 0) return;\n        var newPosition;\n        if (params.slidesPerView === 'auto') {\n            newPosition = -_this.slidesGrid[index];\n        }\n        else {\n            newPosition = -index * slideSize;\n        }\n        if (newPosition < - maxWrapperPosition()) {\n            newPosition = - maxWrapperPosition();\n        }\n\n        if (newPosition === currentPosition) return false;\n\n        if (typeof runCallbacks === 'undefined') runCallbacks = true;\n        swipeToPosition(newPosition, 'to', {index: index, speed: speed, runCallbacks: runCallbacks});\n        return true;\n    };\n\n    function swipeToPosition(newPosition, action, toOptions) {\n        var speed = (action === 'to' && toOptions.speed >= 0) ? toOptions.speed : params.speed;\n        var timeOld = + new Date();\n\n        function anim() {\n            var timeNew = + new Date();\n            var time = timeNew - timeOld;\n            currentPosition += animationStep * time / (1000 / 60);\n            condition = direction === 'toNext' ? currentPosition > newPosition : currentPosition < newPosition;\n            if (condition) {\n                _this.setWrapperTranslate(Math.ceil(currentPosition));\n                _this._DOMAnimating = true;\n                window.setTimeout(function () {\n                    anim();\n                }, 1000 / 60);\n            }\n            else {\n                if (params.onSlideChangeEnd) {\n                    if (action === 'to') {\n                        if (toOptions.runCallbacks === true) _this.fireCallback(params.onSlideChangeEnd, _this, direction);\n                    }\n                    else {\n                        _this.fireCallback(params.onSlideChangeEnd, _this, direction);\n                    }\n\n                }\n                _this.setWrapperTranslate(newPosition);\n                _this._DOMAnimating = false;\n            }\n        }\n\n        if (_this.support.transitions || !params.DOMAnimation) {\n            _this.setWrapperTranslate(newPosition);\n            _this.setWrapperTransition(speed);\n        }\n        else {\n            //Try the DOM animation\n            var currentPosition = _this.getWrapperTranslate();\n            var animationStep = Math.ceil((newPosition - currentPosition) / speed * (1000 / 60));\n            var direction = currentPosition > newPosition ? 'toNext' : 'toPrev';\n            var condition = direction === 'toNext' ? currentPosition > newPosition : currentPosition < newPosition;\n            if (_this._DOMAnimating) return;\n\n            anim();\n        }\n\n        //Update Active Slide Index\n        _this.updateActiveSlide(newPosition);\n\n        //Callbacks\n        if (params.onSlideNext && action === 'next' && toOptions.runCallbacks === true) {\n            _this.fireCallback(params.onSlideNext, _this, newPosition);\n        }\n        if (params.onSlidePrev && action === 'prev' && toOptions.runCallbacks === true) {\n            _this.fireCallback(params.onSlidePrev, _this, newPosition);\n        }\n        //'Reset' Callback\n        if (params.onSlideReset && action === 'reset' && toOptions.runCallbacks === true) {\n            _this.fireCallback(params.onSlideReset, _this, newPosition);\n        }\n\n        //'Next', 'Prev' and 'To' Callbacks\n        if ((action === 'next' || action === 'prev' || action === 'to') && toOptions.runCallbacks === true)\n            slideChangeCallbacks(action);\n    }\n    /*==================================================\n        Transition Callbacks\n    ====================================================*/\n    //Prevent Multiple Callbacks\n    _this._queueStartCallbacks = false;\n    _this._queueEndCallbacks = false;\n    function slideChangeCallbacks(direction) {\n        //Transition Start Callback\n        _this.callPlugins('onSlideChangeStart');\n        if (params.onSlideChangeStart) {\n            if (params.queueStartCallbacks && _this.support.transitions) {\n                if (_this._queueStartCallbacks) return;\n                _this._queueStartCallbacks = true;\n                _this.fireCallback(params.onSlideChangeStart, _this, direction);\n                _this.wrapperTransitionEnd(function () {\n                    _this._queueStartCallbacks = false;\n                });\n            }\n            else _this.fireCallback(params.onSlideChangeStart, _this, direction);\n        }\n        //Transition End Callback\n        if (params.onSlideChangeEnd) {\n            if (_this.support.transitions) {\n                if (params.queueEndCallbacks) {\n                    if (_this._queueEndCallbacks) return;\n                    _this._queueEndCallbacks = true;\n                    _this.wrapperTransitionEnd(function (swiper) {\n                        _this.fireCallback(params.onSlideChangeEnd, swiper, direction);\n                    });\n                }\n                else {\n                    _this.wrapperTransitionEnd(function (swiper) {\n                        _this.fireCallback(params.onSlideChangeEnd, swiper, direction);\n                    });\n                }\n            }\n            else {\n                if (!params.DOMAnimation) {\n                    setTimeout(function () {\n                        _this.fireCallback(params.onSlideChangeEnd, _this, direction);\n                    }, 10);\n                }\n            }\n        }\n    }\n\n    /*==================================================\n        Update Active Slide Index\n    ====================================================*/\n    _this.updateActiveSlide = function (position) {\n        if (!_this.initialized) return;\n        if (_this.slides.length === 0) return;\n        _this.previousIndex = _this.activeIndex;\n        if (typeof position === 'undefined') position = _this.getWrapperTranslate();\n        if (position > 0) position = 0;\n        var i;\n        if (params.slidesPerView === 'auto') {\n            var slidesOffset = 0;\n            _this.activeIndex = _this.slidesGrid.indexOf(-position);\n            if (_this.activeIndex < 0) {\n                for (i = 0; i < _this.slidesGrid.length - 1; i++) {\n                    if (-position > _this.slidesGrid[i] && -position < _this.slidesGrid[i + 1]) {\n                        break;\n                    }\n                }\n                var leftDistance = Math.abs(_this.slidesGrid[i] + position);\n                var rightDistance = Math.abs(_this.slidesGrid[i + 1] + position);\n                if (leftDistance <= rightDistance) _this.activeIndex = i;\n                else _this.activeIndex = i + 1;\n            }\n        }\n        else {\n            _this.activeIndex = Math[params.visibilityFullFit ? 'ceil' : 'round'](-position / slideSize);\n        }\n\n        if (_this.activeIndex === _this.slides.length) _this.activeIndex = _this.slides.length - 1;\n        if (_this.activeIndex < 0) _this.activeIndex = 0;\n\n        // Check for slide\n        if (!_this.slides[_this.activeIndex]) return;\n\n        // Calc Visible slides\n        _this.calcVisibleSlides(position);\n\n        // Mark visible and active slides with additonal classes\n        if (_this.support.classList) {\n            var slide;\n            for (i = 0; i < _this.slides.length; i++) {\n                slide = _this.slides[i];\n                slide.classList.remove(params.slideActiveClass);\n                if (_this.visibleSlides.indexOf(slide) >= 0) {\n                    slide.classList.add(params.slideVisibleClass);\n                } else {\n                    slide.classList.remove(params.slideVisibleClass);\n                }\n            }\n            _this.slides[_this.activeIndex].classList.add(params.slideActiveClass);\n        } else {\n            var activeClassRegexp = new RegExp('\\\\s*' + params.slideActiveClass);\n            var inViewClassRegexp = new RegExp('\\\\s*' + params.slideVisibleClass);\n\n            for (i = 0; i < _this.slides.length; i++) {\n                _this.slides[i].className = _this.slides[i].className.replace(activeClassRegexp, '').replace(inViewClassRegexp, '');\n                if (_this.visibleSlides.indexOf(_this.slides[i]) >= 0) {\n                    _this.slides[i].className += ' ' + params.slideVisibleClass;\n                }\n            }\n            _this.slides[_this.activeIndex].className += ' ' + params.slideActiveClass;\n        }\n\n        //Update loop index\n        if (params.loop) {\n            var ls = _this.loopedSlides;\n            _this.activeLoopIndex = _this.activeIndex - ls;\n            if (_this.activeLoopIndex >= _this.slides.length - ls * 2) {\n                _this.activeLoopIndex = _this.slides.length - ls * 2 - _this.activeLoopIndex;\n            }\n            if (_this.activeLoopIndex < 0) {\n                _this.activeLoopIndex = _this.slides.length - ls * 2 + _this.activeLoopIndex;\n            }\n            if (_this.activeLoopIndex < 0) _this.activeLoopIndex = 0;\n        }\n        else {\n            _this.activeLoopIndex = _this.activeIndex;\n        }\n        //Update Pagination\n        if (params.pagination) {\n            _this.updatePagination(position);\n        }\n    };\n    /*==================================================\n        Pagination\n    ====================================================*/\n    _this.createPagination = function (firstInit) {\n        if (params.paginationClickable && _this.paginationButtons) {\n            removePaginationEvents();\n        }\n        _this.paginationContainer = params.pagination.nodeType ? params.pagination : $$(params.pagination)[0];\n        if (params.createPagination) {\n            var paginationHTML = '';\n            var numOfSlides = _this.slides.length;\n            var numOfButtons = numOfSlides;\n            if (params.loop) numOfButtons -= _this.loopedSlides * 2;\n            for (var i = 0; i < numOfButtons; i++) {\n                paginationHTML += '<' + params.paginationElement + ' class=\"' + params.paginationElementClass + '\"></' + params.paginationElement + '>';\n            }\n            _this.paginationContainer.innerHTML = paginationHTML;\n        }\n        _this.paginationButtons = $$('.' + params.paginationElementClass, _this.paginationContainer);\n        if (!firstInit) _this.updatePagination();\n        _this.callPlugins('onCreatePagination');\n        if (params.paginationClickable) {\n            addPaginationEvents();\n        }\n    };\n    function removePaginationEvents() {\n        var pagers = _this.paginationButtons;\n        if (pagers) {\n            for (var i = 0; i < pagers.length; i++) {\n                _this.h.removeEventListener(pagers[i], 'click', paginationClick);\n            }\n        }\n    }\n    function addPaginationEvents() {\n        var pagers = _this.paginationButtons;\n        if (pagers) {\n            for (var i = 0; i < pagers.length; i++) {\n                _this.h.addEventListener(pagers[i], 'click', paginationClick);\n            }\n        }\n    }\n    function paginationClick(e) {\n        var index;\n        var target = e.target || e.srcElement;\n        var pagers = _this.paginationButtons;\n        for (var i = 0; i < pagers.length; i++) {\n            if (target === pagers[i]) index = i;\n        }\n        if (params.autoplay) _this.stopAutoplay(true);\n        _this.swipeTo(index);\n    }\n    _this.updatePagination = function (position) {\n        if (!params.pagination) return;\n        if (_this.slides.length < 1) return;\n        var activePagers = $$('.' + params.paginationActiveClass, _this.paginationContainer);\n        if (!activePagers) return;\n\n        //Reset all Buttons' class to not active\n        var pagers = _this.paginationButtons;\n        if (pagers.length === 0) return;\n        for (var i = 0; i < pagers.length; i++) {\n            pagers[i].className = params.paginationElementClass;\n        }\n\n        var indexOffset = params.loop ? _this.loopedSlides : 0;\n        if (params.paginationAsRange) {\n            if (!_this.visibleSlides) _this.calcVisibleSlides(position);\n            //Get Visible Indexes\n            var visibleIndexes = [];\n            var j; // lopp index - avoid JSHint W004 / W038\n            for (j = 0; j < _this.visibleSlides.length; j++) {\n                var visIndex = _this.slides.indexOf(_this.visibleSlides[j]) - indexOffset;\n\n                if (params.loop && visIndex < 0) {\n                    visIndex = _this.slides.length - _this.loopedSlides * 2 + visIndex;\n                }\n                if (params.loop && visIndex >= _this.slides.length - _this.loopedSlides * 2) {\n                    visIndex = _this.slides.length - _this.loopedSlides * 2 - visIndex;\n                    visIndex = Math.abs(visIndex);\n                }\n                visibleIndexes.push(visIndex);\n            }\n\n            for (j = 0; j < visibleIndexes.length; j++) {\n                if (pagers[visibleIndexes[j]]) pagers[visibleIndexes[j]].className += ' ' + params.paginationVisibleClass;\n            }\n\n            if (params.loop) {\n                if (pagers[_this.activeLoopIndex] !== undefined) {\n                    pagers[_this.activeLoopIndex].className += ' ' + params.paginationActiveClass;\n                }\n            }\n            else {\n                if (pagers[_this.activeIndex]) pagers[_this.activeIndex].className += ' ' + params.paginationActiveClass;\n            }\n        }\n        else {\n            if (params.loop) {\n                if (pagers[_this.activeLoopIndex]) pagers[_this.activeLoopIndex].className += ' ' + params.paginationActiveClass + ' ' + params.paginationVisibleClass;\n            }\n            else {\n                if (pagers[_this.activeIndex]) pagers[_this.activeIndex].className += ' ' + params.paginationActiveClass + ' ' + params.paginationVisibleClass;\n            }\n        }\n    };\n    _this.calcVisibleSlides = function (position) {\n        var visibleSlides = [];\n        var _slideLeft = 0, _slideSize = 0, _slideRight = 0;\n        if (isH && _this.wrapperLeft > 0) position = position + _this.wrapperLeft;\n        if (!isH && _this.wrapperTop > 0) position = position + _this.wrapperTop;\n\n        for (var i = 0; i < _this.slides.length; i++) {\n            _slideLeft += _slideSize;\n            if (params.slidesPerView === 'auto')\n                _slideSize  = isH ? _this.h.getWidth(_this.slides[i], true, params.roundLengths) : _this.h.getHeight(_this.slides[i], true, params.roundLengths);\n            else _slideSize = slideSize;\n\n            _slideRight = _slideLeft + _slideSize;\n            var isVisibile = false;\n            if (params.visibilityFullFit) {\n                if (_slideLeft >= -position && _slideRight <= -position + containerSize) isVisibile = true;\n                if (_slideLeft <= -position && _slideRight >= -position + containerSize) isVisibile = true;\n            }\n            else {\n                if (_slideRight > -position && _slideRight <= ((-position + containerSize))) isVisibile = true;\n                if (_slideLeft >= -position && _slideLeft < ((-position + containerSize))) isVisibile = true;\n                if (_slideLeft < -position && _slideRight > ((-position + containerSize))) isVisibile = true;\n            }\n\n            if (isVisibile) visibleSlides.push(_this.slides[i]);\n\n        }\n        if (visibleSlides.length === 0) visibleSlides = [_this.slides[_this.activeIndex]];\n\n        _this.visibleSlides = visibleSlides;\n    };\n\n    /*==========================================\n        Autoplay\n    ============================================*/\n    var autoplayTimeoutId, autoplayIntervalId;\n    _this.startAutoplay = function () {\n        if (_this.support.transitions) {\n            if (typeof autoplayTimeoutId !== 'undefined') return false;\n            if (!params.autoplay) return;\n            _this.callPlugins('onAutoplayStart');\n            if (params.onAutoplayStart) _this.fireCallback(params.onAutoplayStart, _this);\n            autoplay();\n        }\n        else {\n            if (typeof autoplayIntervalId !== 'undefined') return false;\n            if (!params.autoplay) return;\n            _this.callPlugins('onAutoplayStart');\n            if (params.onAutoplayStart) _this.fireCallback(params.onAutoplayStart, _this);\n            autoplayIntervalId = setInterval(function () {\n                if (params.loop) {\n                    _this.fixLoop();\n                    _this.swipeNext(true, true);\n                }\n                else if (!_this.swipeNext(true, true)) {\n                    if (!params.autoplayStopOnLast) _this.swipeTo(0);\n                    else {\n                        clearInterval(autoplayIntervalId);\n                        autoplayIntervalId = undefined;\n                    }\n                }\n            }, params.autoplay);\n        }\n    };\n    _this.stopAutoplay = function (internal) {\n        if (_this.support.transitions) {\n            if (!autoplayTimeoutId) return;\n            if (autoplayTimeoutId) clearTimeout(autoplayTimeoutId);\n            autoplayTimeoutId = undefined;\n            if (internal && !params.autoplayDisableOnInteraction) {\n                _this.wrapperTransitionEnd(function () {\n                    autoplay();\n                });\n            }\n            _this.callPlugins('onAutoplayStop');\n            if (params.onAutoplayStop) _this.fireCallback(params.onAutoplayStop, _this);\n        }\n        else {\n            if (autoplayIntervalId) clearInterval(autoplayIntervalId);\n            autoplayIntervalId = undefined;\n            _this.callPlugins('onAutoplayStop');\n            if (params.onAutoplayStop) _this.fireCallback(params.onAutoplayStop, _this);\n        }\n    };\n    function autoplay() {\n        autoplayTimeoutId = setTimeout(function () {\n            if (params.loop) {\n                _this.fixLoop();\n                _this.swipeNext(true, true);\n            }\n            else if (!_this.swipeNext(true, true)) {\n                if (!params.autoplayStopOnLast) _this.swipeTo(0);\n                else {\n                    clearTimeout(autoplayTimeoutId);\n                    autoplayTimeoutId = undefined;\n                }\n            }\n            _this.wrapperTransitionEnd(function () {\n                if (typeof autoplayTimeoutId !== 'undefined') autoplay();\n            });\n        }, params.autoplay);\n    }\n    /*==================================================\n        Loop\n    ====================================================*/\n    _this.loopCreated = false;\n    _this.removeLoopedSlides = function () {\n        if (_this.loopCreated) {\n            for (var i = 0; i < _this.slides.length; i++) {\n                if (_this.slides[i].getData('looped') === true) _this.wrapper.removeChild(_this.slides[i]);\n            }\n        }\n    };\n\n    _this.createLoop = function () {\n        if (_this.slides.length === 0) return;\n        if (params.slidesPerView === 'auto') {\n            _this.loopedSlides = params.loopedSlides || 1;\n        }\n        else {\n            _this.loopedSlides = Math.floor(params.slidesPerView) + params.loopAdditionalSlides;\n        }\n\n        if (_this.loopedSlides > _this.slides.length) {\n            _this.loopedSlides = _this.slides.length;\n        }\n\n        var slideFirstHTML = '',\n            slideLastHTML = '',\n            i;\n        var slidesSetFullHTML = '';\n        /**\n                loopedSlides is too large if loopAdditionalSlides are set.\n                Need to divide the slides by maximum number of slides existing.\n\n                @author        Tomaz Lovrec <tomaz.lovrec@blanc-noir.at>\n        */\n        var numSlides = _this.slides.length;\n        var fullSlideSets = Math.floor(_this.loopedSlides / numSlides);\n        var remainderSlides = _this.loopedSlides % numSlides;\n        // assemble full sets of slides\n        for (i = 0; i < (fullSlideSets * numSlides); i++) {\n            var j = i;\n            if (i >= numSlides) {\n                var over = Math.floor(i / numSlides);\n                j = i - (numSlides * over);\n            }\n            slidesSetFullHTML += _this.slides[j].outerHTML;\n        }\n        // assemble remainder slides\n        // assemble remainder appended to existing slides\n        for (i = 0; i < remainderSlides;i++) {\n            slideLastHTML += addClassToHtmlString(params.slideDuplicateClass, _this.slides[i].outerHTML);\n        }\n        // assemble slides that get preppended to existing slides\n        for (i = numSlides - remainderSlides; i < numSlides;i++) {\n            slideFirstHTML += addClassToHtmlString(params.slideDuplicateClass, _this.slides[i].outerHTML);\n        }\n        // assemble all slides\n        var slides = slideFirstHTML + slidesSetFullHTML + wrapper.innerHTML + slidesSetFullHTML + slideLastHTML;\n        // set the slides\n        wrapper.innerHTML = slides;\n\n        _this.loopCreated = true;\n        _this.calcSlides();\n\n        //Update Looped Slides with special class\n        for (i = 0; i < _this.slides.length; i++) {\n            if (i < _this.loopedSlides || i >= _this.slides.length - _this.loopedSlides) _this.slides[i].setData('looped', true);\n        }\n        _this.callPlugins('onCreateLoop');\n\n    };\n\n    _this.fixLoop = function () {\n        var newIndex;\n        //Fix For Negative Oversliding\n        if (_this.activeIndex < _this.loopedSlides) {\n            newIndex = _this.slides.length - _this.loopedSlides * 3 + _this.activeIndex;\n            _this.swipeTo(newIndex, 0, false);\n        }\n        //Fix For Positive Oversliding\n        else if ((params.slidesPerView === 'auto' && _this.activeIndex >= _this.loopedSlides * 2) || (_this.activeIndex > _this.slides.length - params.slidesPerView * 2)) {\n            newIndex = -_this.slides.length + _this.activeIndex + _this.loopedSlides;\n            _this.swipeTo(newIndex, 0, false);\n        }\n    };\n\n    /*==================================================\n        Slides Loader\n    ====================================================*/\n    _this.loadSlides = function () {\n        var slidesHTML = '';\n        _this.activeLoaderIndex = 0;\n        var slides = params.loader.slides;\n        var slidesToLoad = params.loader.loadAllSlides ? slides.length : params.slidesPerView * (1 + params.loader.surroundGroups);\n        for (var i = 0; i < slidesToLoad; i++) {\n            if (params.loader.slidesHTMLType === 'outer') slidesHTML += slides[i];\n            else {\n                slidesHTML += '<' + params.slideElement + ' class=\"' + params.slideClass + '\" data-swiperindex=\"' + i + '\">' + slides[i] + '</' + params.slideElement + '>';\n            }\n        }\n        _this.wrapper.innerHTML = slidesHTML;\n        _this.calcSlides(true);\n        //Add permanent transitionEnd callback\n        if (!params.loader.loadAllSlides) {\n            _this.wrapperTransitionEnd(_this.reloadSlides, true);\n        }\n    };\n\n    _this.reloadSlides = function () {\n        var slides = params.loader.slides;\n        var newActiveIndex = parseInt(_this.activeSlide().data('swiperindex'), 10);\n        if (newActiveIndex < 0 || newActiveIndex > slides.length - 1) return; //<-- Exit\n        _this.activeLoaderIndex = newActiveIndex;\n        var firstIndex = Math.max(0, newActiveIndex - params.slidesPerView * params.loader.surroundGroups);\n        var lastIndex = Math.min(newActiveIndex + params.slidesPerView * (1 + params.loader.surroundGroups) - 1, slides.length - 1);\n        //Update Transforms\n        if (newActiveIndex > 0) {\n            var newTransform = -slideSize * (newActiveIndex - firstIndex);\n            _this.setWrapperTranslate(newTransform);\n            _this.setWrapperTransition(0);\n        }\n        var i; // loop index\n        //New Slides\n        if (params.loader.logic === 'reload') {\n            _this.wrapper.innerHTML = '';\n            var slidesHTML = '';\n            for (i = firstIndex; i <= lastIndex; i++) {\n                slidesHTML += params.loader.slidesHTMLType === 'outer' ? slides[i] : '<' + params.slideElement + ' class=\"' + params.slideClass + '\" data-swiperindex=\"' + i + '\">' + slides[i] + '</' + params.slideElement + '>';\n            }\n            _this.wrapper.innerHTML = slidesHTML;\n        }\n        else {\n            var minExistIndex = 1000;\n            var maxExistIndex = 0;\n\n            for (i = 0; i < _this.slides.length; i++) {\n                var index = _this.slides[i].data('swiperindex');\n                if (index < firstIndex || index > lastIndex) {\n                    _this.wrapper.removeChild(_this.slides[i]);\n                }\n                else {\n                    minExistIndex = Math.min(index, minExistIndex);\n                    maxExistIndex = Math.max(index, maxExistIndex);\n                }\n            }\n            for (i = firstIndex; i <= lastIndex; i++) {\n                var newSlide;\n                if (i < minExistIndex) {\n                    newSlide = document.createElement(params.slideElement);\n                    newSlide.className = params.slideClass;\n                    newSlide.setAttribute('data-swiperindex', i);\n                    newSlide.innerHTML = slides[i];\n                    _this.wrapper.insertBefore(newSlide, _this.wrapper.firstChild);\n                }\n                if (i > maxExistIndex) {\n                    newSlide = document.createElement(params.slideElement);\n                    newSlide.className = params.slideClass;\n                    newSlide.setAttribute('data-swiperindex', i);\n                    newSlide.innerHTML = slides[i];\n                    _this.wrapper.appendChild(newSlide);\n                }\n            }\n        }\n        //reInit\n        _this.reInit(true);\n    };\n\n    /*==================================================\n        Make Swiper\n    ====================================================*/\n    function makeSwiper() {\n        _this.calcSlides();\n        if (params.loader.slides.length > 0 && _this.slides.length === 0) {\n            _this.loadSlides();\n        }\n        if (params.loop) {\n            _this.createLoop();\n        }\n        _this.init();\n        initEvents();\n        if (params.pagination) {\n            _this.createPagination(true);\n        }\n\n        if (params.loop || params.initialSlide > 0) {\n            _this.swipeTo(params.initialSlide, 0, false);\n        }\n        else {\n            _this.updateActiveSlide(0);\n        }\n        if (params.autoplay) {\n            _this.startAutoplay();\n        }\n        /**\n         * Set center slide index.\n         *\n         * @author        Tomaz Lovrec <tomaz.lovrec@gmail.com>\n         */\n        _this.centerIndex = _this.activeIndex;\n\n        // Callbacks\n        if (params.onSwiperCreated) _this.fireCallback(params.onSwiperCreated, _this);\n        _this.callPlugins('onSwiperCreated');\n    }\n\n    makeSwiper();\n};\n\nSwiper.prototype = {\n    plugins : {},\n\n    /*==================================================\n        Wrapper Operations\n    ====================================================*/\n    wrapperTransitionEnd : function (callback, permanent) {\n        'use strict';\n        var a = this,\n            el = a.wrapper,\n            events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'],\n            i;\n\n        function fireCallBack(e) {\n            if (e.target !== el) return;\n            callback(a);\n            if (a.params.queueEndCallbacks) a._queueEndCallbacks = false;\n            if (!permanent) {\n                for (i = 0; i < events.length; i++) {\n                    a.h.removeEventListener(el, events[i], fireCallBack);\n                }\n            }\n        }\n\n        if (callback) {\n            for (i = 0; i < events.length; i++) {\n                a.h.addEventListener(el, events[i], fireCallBack);\n            }\n        }\n    },\n\n    getWrapperTranslate : function (axis) {\n        'use strict';\n        var el = this.wrapper,\n            matrix, curTransform, curStyle, transformMatrix;\n\n        // automatic axis detection\n        if (typeof axis === 'undefined') {\n            axis = this.params.mode === 'horizontal' ? 'x' : 'y';\n        }\n\n        if (this.support.transforms && this.params.useCSS3Transforms) {\n            curStyle = window.getComputedStyle(el, null);\n            if (window.WebKitCSSMatrix) {\n                // Some old versions of Webkit choke when 'none' is passed; pass\n                // empty string instead in this case\n                transformMatrix = new WebKitCSSMatrix(curStyle.webkitTransform === 'none' ? '' : curStyle.webkitTransform);\n            }\n            else {\n                transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform  || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n                matrix = transformMatrix.toString().split(',');\n            }\n\n            if (axis === 'x') {\n                //Latest Chrome and webkits Fix\n                if (window.WebKitCSSMatrix)\n                    curTransform = transformMatrix.m41;\n                //Crazy IE10 Matrix\n                else if (matrix.length === 16)\n                    curTransform = parseFloat(matrix[12]);\n                //Normal Browsers\n                else\n                    curTransform = parseFloat(matrix[4]);\n            }\n            if (axis === 'y') {\n                //Latest Chrome and webkits Fix\n                if (window.WebKitCSSMatrix)\n                    curTransform = transformMatrix.m42;\n                //Crazy IE10 Matrix\n                else if (matrix.length === 16)\n                    curTransform = parseFloat(matrix[13]);\n                //Normal Browsers\n                else\n                    curTransform = parseFloat(matrix[5]);\n            }\n        }\n        else {\n            if (axis === 'x') curTransform = parseFloat(el.style.left, 10) || 0;\n            if (axis === 'y') curTransform = parseFloat(el.style.top, 10) || 0;\n        }\n        return curTransform || 0;\n    },\n\n    setWrapperTranslate : function (x, y, z) {\n        'use strict';\n        var es = this.wrapper.style,\n            coords = {x: 0, y: 0, z: 0},\n            translate;\n\n        // passed all coordinates\n        if (arguments.length === 3) {\n            coords.x = x;\n            coords.y = y;\n            coords.z = z;\n        }\n\n        // passed one coordinate and optional axis\n        else {\n            if (typeof y === 'undefined') {\n                y = this.params.mode === 'horizontal' ? 'x' : 'y';\n            }\n            coords[y] = x;\n        }\n\n        if (this.support.transforms && this.params.useCSS3Transforms) {\n            translate = this.support.transforms3d ? 'translate3d(' + coords.x + 'px, ' + coords.y + 'px, ' + coords.z + 'px)' : 'translate(' + coords.x + 'px, ' + coords.y + 'px)';\n            es.webkitTransform = es.MsTransform = es.msTransform = es.MozTransform = es.OTransform = es.transform = translate;\n        }\n        else {\n            es.left = coords.x + 'px';\n            es.top  = coords.y + 'px';\n        }\n        this.callPlugins('onSetWrapperTransform', coords);\n        if (this.params.onSetWrapperTransform) this.fireCallback(this.params.onSetWrapperTransform, this, coords);\n    },\n\n    setWrapperTransition : function (duration) {\n        'use strict';\n        var es = this.wrapper.style;\n        es.webkitTransitionDuration = es.MsTransitionDuration = es.msTransitionDuration = es.MozTransitionDuration = es.OTransitionDuration = es.transitionDuration = (duration / 1000) + 's';\n        this.callPlugins('onSetWrapperTransition', {duration: duration});\n        if (this.params.onSetWrapperTransition) this.fireCallback(this.params.onSetWrapperTransition, this, duration);\n\n    },\n\n    /*==================================================\n        Helpers\n    ====================================================*/\n    h : {\n        getWidth: function (el, outer, round) {\n            'use strict';\n            var width = window.getComputedStyle(el, null).getPropertyValue('width');\n            var returnWidth = parseFloat(width);\n            //IE Fixes\n            if (isNaN(returnWidth) || width.indexOf('%') > 0 || returnWidth < 0) {\n                returnWidth = el.offsetWidth - parseFloat(window.getComputedStyle(el, null).getPropertyValue('padding-left')) - parseFloat(window.getComputedStyle(el, null).getPropertyValue('padding-right'));\n            }\n            if (outer) returnWidth += parseFloat(window.getComputedStyle(el, null).getPropertyValue('padding-left')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue('padding-right'));\n            if (round) return Math.ceil(returnWidth);\n            else return returnWidth;\n        },\n        getHeight: function (el, outer, round) {\n            'use strict';\n            if (outer) return el.offsetHeight;\n\n            var height = window.getComputedStyle(el, null).getPropertyValue('height');\n            var returnHeight = parseFloat(height);\n            //IE Fixes\n            if (isNaN(returnHeight) || height.indexOf('%') > 0 || returnHeight < 0) {\n                returnHeight = el.offsetHeight - parseFloat(window.getComputedStyle(el, null).getPropertyValue('padding-top')) - parseFloat(window.getComputedStyle(el, null).getPropertyValue('padding-bottom'));\n            }\n            if (outer) returnHeight += parseFloat(window.getComputedStyle(el, null).getPropertyValue('padding-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue('padding-bottom'));\n            if (round) return Math.ceil(returnHeight);\n            else return returnHeight;\n        },\n        getOffset: function (el) {\n            'use strict';\n            var box = el.getBoundingClientRect();\n            var body = document.body;\n            var clientTop  = el.clientTop  || body.clientTop  || 0;\n            var clientLeft = el.clientLeft || body.clientLeft || 0;\n            var scrollTop  = window.pageYOffset || el.scrollTop;\n            var scrollLeft = window.pageXOffset || el.scrollLeft;\n            if (document.documentElement && !window.pageYOffset) {\n                //IE7-8\n                scrollTop  = document.documentElement.scrollTop;\n                scrollLeft = document.documentElement.scrollLeft;\n            }\n            return {\n                top: box.top  + scrollTop  - clientTop,\n                left: box.left + scrollLeft - clientLeft\n            };\n        },\n        windowWidth : function () {\n            'use strict';\n            if (window.innerWidth) return window.innerWidth;\n            else if (document.documentElement && document.documentElement.clientWidth) return document.documentElement.clientWidth;\n        },\n        windowHeight : function () {\n            'use strict';\n            if (window.innerHeight) return window.innerHeight;\n            else if (document.documentElement && document.documentElement.clientHeight) return document.documentElement.clientHeight;\n        },\n        windowScroll : function () {\n            'use strict';\n            if (typeof pageYOffset !== 'undefined') {\n                return {\n                    left: window.pageXOffset,\n                    top: window.pageYOffset\n                };\n            }\n            else if (document.documentElement) {\n                return {\n                    left: document.documentElement.scrollLeft,\n                    top: document.documentElement.scrollTop\n                };\n            }\n        },\n\n        addEventListener : function (el, event, listener, useCapture) {\n            'use strict';\n            if (typeof useCapture === 'undefined') {\n                useCapture = false;\n            }\n\n            if (el.addEventListener) {\n                el.addEventListener(event, listener, useCapture);\n            }\n            else if (el.attachEvent) {\n                el.attachEvent('on' + event, listener);\n            }\n        },\n\n        removeEventListener : function (el, event, listener, useCapture) {\n            'use strict';\n            if (typeof useCapture === 'undefined') {\n                useCapture = false;\n            }\n\n            if (el.removeEventListener) {\n                el.removeEventListener(event, listener, useCapture);\n            }\n            else if (el.detachEvent) {\n                el.detachEvent('on' + event, listener);\n            }\n        }\n    },\n    setTransform : function (el, transform) {\n        'use strict';\n        var es = el.style;\n        es.webkitTransform = es.MsTransform = es.msTransform = es.MozTransform = es.OTransform = es.transform = transform;\n    },\n    setTranslate : function (el, translate) {\n        'use strict';\n        var es = el.style;\n        var pos = {\n            x : translate.x || 0,\n            y : translate.y || 0,\n            z : translate.z || 0\n        };\n        var transformString = this.support.transforms3d ? 'translate3d(' + (pos.x) + 'px,' + (pos.y) + 'px,' + (pos.z) + 'px)' : 'translate(' + (pos.x) + 'px,' + (pos.y) + 'px)';\n        es.webkitTransform = es.MsTransform = es.msTransform = es.MozTransform = es.OTransform = es.transform = transformString;\n        if (!this.support.transforms) {\n            es.left = pos.x + 'px';\n            es.top = pos.y + 'px';\n        }\n    },\n    setTransition : function (el, duration) {\n        'use strict';\n        var es = el.style;\n        es.webkitTransitionDuration = es.MsTransitionDuration = es.msTransitionDuration = es.MozTransitionDuration = es.OTransitionDuration = es.transitionDuration = duration + 'ms';\n    },\n    /*==================================================\n        Feature Detection\n    ====================================================*/\n    support: {\n\n        touch : (window.Modernizr && Modernizr.touch === true) || (function () {\n            'use strict';\n            return !!(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch);\n        })(),\n\n        transforms3d : (window.Modernizr && Modernizr.csstransforms3d === true) || (function () {\n            'use strict';\n            var div = document.createElement('div').style;\n            return ('webkitPerspective' in div || 'MozPerspective' in div || 'OPerspective' in div || 'MsPerspective' in div || 'perspective' in div);\n        })(),\n\n        transforms : (window.Modernizr && Modernizr.csstransforms === true) || (function () {\n            'use strict';\n            var div = document.createElement('div').style;\n            return ('transform' in div || 'WebkitTransform' in div || 'MozTransform' in div || 'msTransform' in div || 'MsTransform' in div || 'OTransform' in div);\n        })(),\n\n        transitions : (window.Modernizr && Modernizr.csstransitions === true) || (function () {\n            'use strict';\n            var div = document.createElement('div').style;\n            return ('transition' in div || 'WebkitTransition' in div || 'MozTransition' in div || 'msTransition' in div || 'MsTransition' in div || 'OTransition' in div);\n        })(),\n\n        classList : (function () {\n            'use strict';\n            var div = document.createElement('div');\n            return 'classList' in div;\n        })()\n    },\n\n    browser : {\n\n        ie8 : (function () {\n            'use strict';\n            var rv = -1; // Return value assumes failure.\n            if (navigator.appName === 'Microsoft Internet Explorer') {\n                var ua = navigator.userAgent;\n                var re = new RegExp(/MSIE ([0-9]{1,}[\\.0-9]{0,})/);\n                if (re.exec(ua) !== null)\n                    rv = parseFloat(RegExp.$1);\n            }\n            return rv !== -1 && rv < 9;\n        })(),\n\n        ie10 : window.navigator.msPointerEnabled,\n        ie11 : window.navigator.pointerEnabled\n    }\n};\n\n/*=========================\n  jQuery & Zepto Plugins\n  ===========================*/\nif (window.jQuery || window.Zepto) {\n    (function ($) {\n        'use strict';\n        $.fn.swiper = function (params) {\n            var firstInstance;\n            this.each(function (i) {\n                var that = $(this);\n                var s = new Swiper(that[0], params);\n                if (!i) firstInstance = s;\n                that.data('swiper', s);\n            });\n            return firstInstance;\n        };\n    })(window.jQuery || window.Zepto);\n}\n\n// CommonJS support\nif (typeof(module) !== 'undefined') {\n    module.exports = Swiper;\n\n// requirejs support\n} else if (typeof define === 'function' && define.amd) {\n    define([], function () {\n        'use strict';\n        return Swiper;\n    });\n}\n","/*\n * Swiper Smooth Progress 1.1.0\n * Smooth progress plugin for Swiper\n *\n * http://www.idangero.us/sliders/swiper/plugins/progress.php\n *\n * Copyright 2010-2014, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under GPL & MIT\n *\n * Released on: January 29, 2014\n */\nSwiper.prototype.plugins.progress = function(a) {\n\tfunction b() {\n\t\tfor (var b = 0; b < a.slides.length; b++) {\n\t\t\tvar c = a.slides[b];\n\t\t\tc.progressSlideSize = e ? a.h.getWidth(c) : a.h.getHeight(c), c.progressSlideOffset = \"offsetLeft\" in c ? e ? c.offsetLeft : c.offsetTop : e ? c.getOffset().left - a.h.getOffset(a.container).left : c.getOffset().top - a.h.getOffset(a.container).top\n\t\t}\n\t\td = e ? a.h.getWidth(a.wrapper) + a.wrapperLeft + a.wrapperRight - a.width : a.h.getHeight(a.wrapper) + a.wrapperTop + a.wrapperBottom - a.height\n\t}\n\tfunction c(b) {\n\t\tvar c, b = b || {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tz: 0\n\t\t};\n\t\tc = 1 == a.params.centeredSlides ? e ? -b.x + a.width / 2 : -b.y + a.height / 2 : e ? -b.x : -b.y;\n\t\tfor (var f = 0; f < a.slides.length; f++) {\n\t\t\tvar g = a.slides[f],\n\t\t\t\th = 1 == a.params.centeredSlides ? g.progressSlideSize / 2 : 0,\n\t\t\t\ti = (c - g.progressSlideOffset - h) / g.progressSlideSize;\n\t\t\tg.progress = i\n\t\t}\n\t\ta.progress = e ? -b.x / d : -b.y / d, a.params.onProgressChange && a.fireCallback(a.params.onProgressChange, a)\n\t}\n\tvar d, e = \"horizontal\" == a.params.mode,\n\t\tf = {\n\t\t\tonFirstInit: function() {\n\t\t\t\tb(), c({\n\t\t\t\t\tx: a.getWrapperTranslate(\"x\"),\n\t\t\t\t\ty: a.getWrapperTranslate(\"y\")\n\t\t\t\t})\n\t\t\t},\n\t\t\tonInit: function() {\n\t\t\t\tb()\n\t\t\t},\n\t\t\tonSetWrapperTransform: function(a) {\n\t\t\t\tc(a)\n\t\t\t}\n\t\t};\n\treturn f\n};","/////    /////    /////    /////\n/////    /////    /////    /////\n/////    /////    /////    /////\n/////    /////    /////    /////\n/////             /////    /////\n/////             /////    /////\n/////    /////    /////    /////\n/////    /////    /////    /////\n         /////    /////\n         /////    /////\n/////    /////    /////    /////\n/////    /////    /////    /////\n/////    /////    /////    /////\n/////    /////    /////    /////\n\n/**\n * ScrollReveal\n * ------------\n * Version : 3.3.4\n * Website : scrollrevealjs.org\n * Repo    : github.com/jlmakes/scrollreveal.js\n * Author  : Julian Lloyd (@jlmakes)\n */\n\n;(function () {\n  'use strict'\n\n  var sr\n  var _requestAnimationFrame\n\n  function ScrollReveal (config) {\n    // Support instantiation without the `new` keyword.\n    if (typeof this === 'undefined' || Object.getPrototypeOf(this) !== ScrollReveal.prototype) {\n      return new ScrollReveal(config)\n    }\n\n    sr = this // Save reference to instance.\n    sr.version = '3.3.4'\n    sr.tools = new Tools() // *required utilities\n\n    if (sr.isSupported()) {\n      sr.tools.extend(sr.defaults, config || {})\n\n      sr.defaults.container = _resolveContainer(sr.defaults)\n\n      sr.store = {\n        elements: {},\n        containers: []\n      }\n\n      sr.sequences = {}\n      sr.history = []\n      sr.uid = 0\n      sr.initialized = false\n    } else if (typeof console !== 'undefined' && console !== null) {\n      // Note: IE9 only supports console if devtools are open.\n      console.log('ScrollReveal is not supported in this browser.')\n    }\n\n    return sr\n  }\n\n  /**\n   * Configuration\n   * -------------\n   * This object signature can be passed directly to the ScrollReveal constructor,\n   * or as the second argument of the `reveal()` method.\n   */\n\n  ScrollReveal.prototype.defaults = {\n    // 'bottom', 'left', 'top', 'right'\n    origin: 'bottom',\n\n    // Can be any valid CSS distance, e.g. '5rem', '10%', '20vw', etc.\n    distance: '20px',\n\n    // Time in milliseconds.\n    duration: 500,\n    delay: 0,\n\n    // Starting angles in degrees, will transition from these values to 0 in all axes.\n    rotate: { x: 0, y: 0, z: 0 },\n\n    // Starting opacity value, before transitioning to the computed opacity.\n    opacity: 0,\n\n    // Starting scale value, will transition from this value to 1\n    scale: 0.9,\n\n    // Accepts any valid CSS easing, e.g. 'ease', 'ease-in-out', 'linear', etc.\n    easing: 'cubic-bezier(0.6, 0.2, 0.1, 1)',\n\n    // `<html>` is the default reveal container. You can pass either:\n    // DOM Node, e.g. document.querySelector('.fooContainer')\n    // Selector, e.g. '.fooContainer'\n    container: window.document.documentElement,\n\n    // true/false to control reveal animations on mobile.\n    mobile: true,\n\n    // true:  reveals occur every time elements become visible\n    // false: reveals occur once as elements become visible\n    reset: false,\n\n    // 'always' — delay for all reveal animations\n    // 'once'   — delay only the first time reveals occur\n    // 'onload' - delay only for animations triggered by first load\n    useDelay: 'always',\n\n    // Change when an element is considered in the viewport. The default value\n    // of 0.20 means 20% of an element must be visible for its reveal to occur.\n    viewFactor: 0.2,\n\n    // Pixel values that alter the container boundaries.\n    // e.g. Set `{ top: 48 }`, if you have a 48px tall fixed toolbar.\n    // --\n    // Visual Aid: https://scrollrevealjs.org/assets/viewoffset.png\n    viewOffset: { top: 0, right: 0, bottom: 0, left: 0 },\n\n    // Callbacks that fire for each triggered element reveal, and reset.\n    beforeReveal: function (domEl) {},\n    beforeReset: function (domEl) {},\n\n    // Callbacks that fire for each completed element reveal, and reset.\n    afterReveal: function (domEl) {},\n    afterReset: function (domEl) {}\n  }\n\n  /**\n   * Check if client supports CSS Transform and CSS Transition.\n   * @return {boolean}\n   */\n  ScrollReveal.prototype.isSupported = function () {\n    var style = document.documentElement.style\n    return 'WebkitTransition' in style && 'WebkitTransform' in style ||\n      'transition' in style && 'transform' in style\n  }\n\n  /**\n   * Creates a reveal set, a group of elements that will animate when they\n   * become visible. If [interval] is provided, a new sequence is created\n   * that will ensure elements reveal in the order they appear in the DOM.\n   *\n   * @param {Node|NodeList|string} [target]   The node, node list or selector to use for animation.\n   * @param {Object}               [config]   Override the defaults for this reveal set.\n   * @param {number}               [interval] Time between sequenced element animations (milliseconds).\n   * @param {boolean}              [sync]     Used internally when updating reveals for async content.\n   *\n   * @return {Object} The current ScrollReveal instance.\n   */\n  ScrollReveal.prototype.reveal = function (target, config, interval, sync) {\n    var container\n    var elements\n    var elem\n    var elemId\n    var sequence\n    var sequenceId\n\n    // No custom configuration was passed, but a sequence interval instead.\n    // let’s shuffle things around to make sure everything works.\n    if (config !== undefined && typeof config === 'number') {\n      interval = config\n      config = {}\n    } else if (config === undefined || config === null) {\n      config = {}\n    }\n\n    container = _resolveContainer(config)\n    elements = _getRevealElements(target, container)\n\n    if (!elements.length) {\n      console.log('ScrollReveal: reveal on \"' + target + '\" failed, no elements found.')\n      return sr\n    }\n\n    // Prepare a new sequence if an interval is passed.\n    if (interval && typeof interval === 'number') {\n      sequenceId = _nextUid()\n\n      sequence = sr.sequences[sequenceId] = {\n        id: sequenceId,\n        interval: interval,\n        elemIds: [],\n        active: false\n      }\n    }\n\n    // Begin main loop to configure ScrollReveal elements.\n    for (var i = 0; i < elements.length; i++) {\n      // Check if the element has already been configured and grab it from the store.\n      elemId = elements[i].getAttribute('data-sr-id')\n      if (elemId) {\n        elem = sr.store.elements[elemId]\n      } else {\n        // Otherwise, let’s do some basic setup.\n        elem = {\n          id: _nextUid(),\n          domEl: elements[i],\n          seen: false,\n          revealing: false\n        }\n        elem.domEl.setAttribute('data-sr-id', elem.id)\n      }\n\n      // Sequence only setup\n      if (sequence) {\n        elem.sequence = {\n          id: sequence.id,\n          index: sequence.elemIds.length\n        }\n\n        sequence.elemIds.push(elem.id)\n      }\n\n      // New or existing element, it’s time to update its configuration, styles,\n      // and send the updates to our store.\n      _configure(elem, config, container)\n      _style(elem)\n      _updateStore(elem)\n\n      // We need to make sure elements are set to visibility: visible, even when\n      // on mobile and `config.mobile === false`, or if unsupported.\n      if (sr.tools.isMobile() && !elem.config.mobile || !sr.isSupported()) {\n        elem.domEl.setAttribute('style', elem.styles.inline)\n        elem.disabled = true\n      } else if (!elem.revealing) {\n        // Otherwise, proceed normally.\n        elem.domEl.setAttribute('style',\n          elem.styles.inline +\n          elem.styles.transform.initial\n        )\n      }\n    }\n\n    // Each `reveal()` is recorded so that when calling `sync()` while working\n    // with asynchronously loaded content, it can re-trace your steps but with\n    // all your new elements now in the DOM.\n\n    // Since `reveal()` is called internally by `sync()`, we don’t want to\n    // record or intiialize each reveal during syncing.\n    if (!sync && sr.isSupported()) {\n      _record(target, config, interval)\n\n      // We push initialization to the event queue using setTimeout, so that we can\n      // give ScrollReveal room to process all reveal calls before putting things into motion.\n      // --\n      // Philip Roberts - What the heck is the event loop anyway? (JSConf EU 2014)\n      // https://www.youtube.com/watch?v=8aGhZQkoFbQ\n      if (sr.initTimeout) {\n        window.clearTimeout(sr.initTimeout)\n      }\n      sr.initTimeout = window.setTimeout(_init, 0)\n    }\n\n    return sr\n  }\n\n  /**\n   * Re-runs `reveal()` for each record stored in history, effectively capturing\n   * any content loaded asynchronously that matches existing reveal set targets.\n   * @return {Object} The current ScrollReveal instance.\n   */\n  ScrollReveal.prototype.sync = function () {\n    if (sr.history.length && sr.isSupported()) {\n      for (var i = 0; i < sr.history.length; i++) {\n        var record = sr.history[i]\n        sr.reveal(record.target, record.config, record.interval, true)\n      }\n      _init()\n    } else {\n      console.log('ScrollReveal: sync failed, no reveals found.')\n    }\n    return sr\n  }\n\n  /**\n   * Private Methods\n   * ---------------\n   */\n\n  function _resolveContainer (config) {\n    if (config && config.container) {\n      if (typeof config.container === 'string') {\n        return window.document.documentElement.querySelector(config.container)\n      } else if (sr.tools.isNode(config.container)) {\n        return config.container\n      } else {\n        console.log('ScrollReveal: invalid container \"' + config.container + '\" provided.')\n        console.log('ScrollReveal: falling back to default container.')\n      }\n    }\n    return sr.defaults.container\n  }\n\n  /**\n   * check to see if a node or node list was passed in as the target,\n   * otherwise query the container using target as a selector.\n   *\n   * @param {Node|NodeList|string} [target]    client input for reveal target.\n   * @param {Node}                 [container] parent element for selector queries.\n   *\n   * @return {array} elements to be revealed.\n   */\n  function _getRevealElements (target, container) {\n    if (typeof target === 'string') {\n      return Array.prototype.slice.call(container.querySelectorAll(target))\n    } else if (sr.tools.isNode(target)) {\n      return [target]\n    } else if (sr.tools.isNodeList(target)) {\n      return Array.prototype.slice.call(target)\n    }\n    return []\n  }\n\n  /**\n   * A consistent way of creating unique IDs.\n   * @returns {number}\n   */\n  function _nextUid () {\n    return ++sr.uid\n  }\n\n  function _configure (elem, config, container) {\n    // If a container was passed as a part of the config object,\n    // let’s overwrite it with the resolved container passed in.\n    if (config.container) config.container = container\n    // If the element hasn’t already been configured, let’s use a clone of the\n    // defaults extended by the configuration passed as the second argument.\n    if (!elem.config) {\n      elem.config = sr.tools.extendClone(sr.defaults, config)\n    } else {\n      // Otherwise, let’s use a clone of the existing element configuration extended\n      // by the configuration passed as the second argument.\n      elem.config = sr.tools.extendClone(elem.config, config)\n    }\n\n    // Infer CSS Transform axis from origin string.\n    if (elem.config.origin === 'top' || elem.config.origin === 'bottom') {\n      elem.config.axis = 'Y'\n    } else {\n      elem.config.axis = 'X'\n    }\n  }\n\n  function _style (elem) {\n    var computed = window.getComputedStyle(elem.domEl)\n\n    if (!elem.styles) {\n      elem.styles = {\n        transition: {},\n        transform: {},\n        computed: {}\n      }\n\n      // Capture any existing inline styles, and add our visibility override.\n      // --\n      // See section 4.2. in the Documentation:\n      // https://github.com/jlmakes/scrollreveal.js#42-improve-user-experience\n      elem.styles.inline = elem.domEl.getAttribute('style') || ''\n      elem.styles.inline += '; visibility: visible; '\n\n      // grab the elements existing opacity.\n      elem.styles.computed.opacity = computed.opacity\n\n      // grab the elements existing transitions.\n      if (!computed.transition || computed.transition === 'all 0s ease 0s') {\n        elem.styles.computed.transition = ''\n      } else {\n        elem.styles.computed.transition = computed.transition + ', '\n      }\n    }\n\n    // Create transition styles\n    elem.styles.transition.instant = _generateTransition(elem, 0)\n    elem.styles.transition.delayed = _generateTransition(elem, elem.config.delay)\n\n    // Generate transform styles, first with the webkit prefix.\n    elem.styles.transform.initial = ' -webkit-transform:'\n    elem.styles.transform.target = ' -webkit-transform:'\n    _generateTransform(elem)\n\n    // And again without any prefix.\n    elem.styles.transform.initial += 'transform:'\n    elem.styles.transform.target += 'transform:'\n    _generateTransform(elem)\n  }\n\n  function _generateTransition (elem, delay) {\n    var config = elem.config\n\n    return '-webkit-transition: ' + elem.styles.computed.transition +\n      '-webkit-transform ' + config.duration / 1000 + 's ' +\n      config.easing + ' ' +\n      delay / 1000 + 's, opacity ' +\n      config.duration / 1000 + 's ' +\n      config.easing + ' ' +\n      delay / 1000 + 's; ' +\n\n      'transition: ' + elem.styles.computed.transition +\n      'transform ' + config.duration / 1000 + 's ' +\n      config.easing + ' ' +\n      delay / 1000 + 's, opacity ' +\n      config.duration / 1000 + 's ' +\n      config.easing + ' ' +\n      delay / 1000 + 's; '\n  }\n\n  function _generateTransform (elem) {\n    var config = elem.config\n    var cssDistance\n    var transform = elem.styles.transform\n\n    // Let’s make sure our our pixel distances are negative for top and left.\n    // e.g. origin = 'top' and distance = '25px' starts at `top: -25px` in CSS.\n    if (config.origin === 'top' || config.origin === 'left') {\n      cssDistance = /^-/.test(config.distance)\n        ? config.distance.substr(1)\n        : '-' + config.distance\n    } else {\n      cssDistance = config.distance\n    }\n\n    if (parseInt(config.distance)) {\n      transform.initial += ' translate' + config.axis + '(' + cssDistance + ')'\n      transform.target += ' translate' + config.axis + '(0)'\n    }\n    if (config.scale) {\n      transform.initial += ' scale(' + config.scale + ')'\n      transform.target += ' scale(1)'\n    }\n    if (config.rotate.x) {\n      transform.initial += ' rotateX(' + config.rotate.x + 'deg)'\n      transform.target += ' rotateX(0)'\n    }\n    if (config.rotate.y) {\n      transform.initial += ' rotateY(' + config.rotate.y + 'deg)'\n      transform.target += ' rotateY(0)'\n    }\n    if (config.rotate.z) {\n      transform.initial += ' rotateZ(' + config.rotate.z + 'deg)'\n      transform.target += ' rotateZ(0)'\n    }\n    transform.initial += '; opacity: ' + config.opacity + ';'\n    transform.target += '; opacity: ' + elem.styles.computed.opacity + ';'\n  }\n\n  function _updateStore (elem) {\n    var container = elem.config.container\n\n    // If this element’s container isn’t already in the store, let’s add it.\n    if (container && sr.store.containers.indexOf(container) === -1) {\n      sr.store.containers.push(elem.config.container)\n    }\n\n    // Update the element stored with our new element.\n    sr.store.elements[elem.id] = elem\n  }\n\n  function _record (target, config, interval) {\n    // Save the `reveal()` arguments that triggered this `_record()` call, so we\n    // can re-trace our steps when calling the `sync()` method.\n    var record = {\n      target: target,\n      config: config,\n      interval: interval\n    }\n    sr.history.push(record)\n  }\n\n  function _init () {\n    if (sr.isSupported()) {\n      // Initial animate call triggers valid reveal animations on first load.\n      // Subsequent animate calls are made inside the event handler.\n      _animate()\n\n      // Then we loop through all container nodes in the store and bind event\n      // listeners to each.\n      for (var i = 0; i < sr.store.containers.length; i++) {\n        sr.store.containers[i].addEventListener('scroll', _handler)\n        sr.store.containers[i].addEventListener('resize', _handler)\n      }\n\n      // Let’s also do a one-time binding of window event listeners.\n      if (!sr.initialized) {\n        window.addEventListener('scroll', _handler)\n        window.addEventListener('resize', _handler)\n        sr.initialized = true\n      }\n    }\n    return sr\n  }\n\n  function _handler () {\n    _requestAnimationFrame(_animate)\n  }\n\n  function _setActiveSequences () {\n    var active\n    var elem\n    var elemId\n    var sequence\n\n    // Loop through all sequences\n    sr.tools.forOwn(sr.sequences, function (sequenceId) {\n      sequence = sr.sequences[sequenceId]\n      active = false\n\n      // For each sequenced elemenet, let’s check visibility and if\n      // any are visible, set it’s sequence to active.\n      for (var i = 0; i < sequence.elemIds.length; i++) {\n        elemId = sequence.elemIds[i]\n        elem = sr.store.elements[elemId]\n        if (_isElemVisible(elem) && !active) {\n          active = true\n        }\n      }\n\n      sequence.active = active\n    })\n  }\n\n  function _animate () {\n    var delayed\n    var elem\n\n    _setActiveSequences()\n\n    // Loop through all elements in the store\n    sr.tools.forOwn(sr.store.elements, function (elemId) {\n      elem = sr.store.elements[elemId]\n      delayed = _shouldUseDelay(elem)\n\n      // Let’s see if we should revealand if so,\n      // trigger the `beforeReveal` callback and\n      // determine whether or not to use delay.\n      if (_shouldReveal(elem)) {\n        elem.config.beforeReveal(elem.domEl)\n        if (delayed) {\n          elem.domEl.setAttribute('style',\n            elem.styles.inline +\n            elem.styles.transform.target +\n            elem.styles.transition.delayed\n          )\n        } else {\n          elem.domEl.setAttribute('style',\n            elem.styles.inline +\n            elem.styles.transform.target +\n            elem.styles.transition.instant\n          )\n        }\n\n        // Let’s queue the `afterReveal` callback\n        // and mark the element as seen and revealing.\n        _queueCallback('reveal', elem, delayed)\n        elem.revealing = true\n        elem.seen = true\n\n        if (elem.sequence) {\n          _queueNextInSequence(elem, delayed)\n        }\n      } else if (_shouldReset(elem)) {\n        //Otherwise reset our element and\n        // trigger the `beforeReset` callback.\n        elem.config.beforeReset(elem.domEl)\n        elem.domEl.setAttribute('style',\n          elem.styles.inline +\n          elem.styles.transform.initial +\n          elem.styles.transition.instant\n        )\n        // And queue the `afterReset` callback.\n        _queueCallback('reset', elem)\n        elem.revealing = false\n      }\n    })\n  }\n\n  function _queueNextInSequence (elem, delayed) {\n    var elapsed = 0\n    var delay = 0\n    var sequence = sr.sequences[elem.sequence.id]\n\n    // We’re processing a sequenced element, so let's block other elements in this sequence.\n    sequence.blocked = true\n\n    // Since we’re triggering animations a part of a sequence after animations on first load,\n    // we need to check for that condition and explicitly add the delay to our timer.\n    if (delayed && elem.config.useDelay === 'onload') {\n      delay = elem.config.delay\n    }\n\n    // If a sequence timer is already running, capture the elapsed time and clear it.\n    if (elem.sequence.timer) {\n      elapsed = Math.abs(elem.sequence.timer.started - new Date())\n      window.clearTimeout(elem.sequence.timer)\n    }\n\n    // Start a new timer.\n    elem.sequence.timer = { started: new Date() }\n    elem.sequence.timer.clock = window.setTimeout(function () {\n      // Sequence interval has passed, so unblock the sequence and re-run the handler.\n      sequence.blocked = false\n      elem.sequence.timer = null\n      _handler()\n    }, Math.abs(sequence.interval) + delay - elapsed)\n  }\n\n  function _queueCallback (type, elem, delayed) {\n    var elapsed = 0\n    var duration = 0\n    var callback = 'after'\n\n    // Check which callback we’re working with.\n    switch (type) {\n      case 'reveal':\n        duration = elem.config.duration\n        if (delayed) {\n          duration += elem.config.delay\n        }\n        callback += 'Reveal'\n        break\n\n      case 'reset':\n        duration = elem.config.duration\n        callback += 'Reset'\n        break\n    }\n\n    // If a timer is already running, capture the elapsed time and clear it.\n    if (elem.timer) {\n      elapsed = Math.abs(elem.timer.started - new Date())\n      window.clearTimeout(elem.timer.clock)\n    }\n\n    // Start a new timer.\n    elem.timer = { started: new Date() }\n    elem.timer.clock = window.setTimeout(function () {\n      // The timer completed, so let’s fire the callback and null the timer.\n      elem.config[callback](elem.domEl)\n      elem.timer = null\n    }, duration - elapsed)\n  }\n\n  function _shouldReveal (elem) {\n    if (elem.sequence) {\n      var sequence = sr.sequences[elem.sequence.id]\n      return sequence.active &&\n        !sequence.blocked &&\n        !elem.revealing &&\n        !elem.disabled\n    }\n    return _isElemVisible(elem) &&\n      !elem.revealing &&\n      !elem.disabled\n  }\n\n  function _shouldUseDelay (elem) {\n    var config = elem.config.useDelay\n    return config === 'always' ||\n      (config === 'onload' && !sr.initialized) ||\n      (config === 'once' && !elem.seen)\n  }\n\n  function _shouldReset (elem) {\n    if (elem.sequence) {\n      var sequence = sr.sequences[elem.sequence.id]\n      return !sequence.active &&\n        elem.config.reset &&\n        elem.revealing &&\n        !elem.disabled\n    }\n    return !_isElemVisible(elem) &&\n      elem.config.reset &&\n      elem.revealing &&\n      !elem.disabled\n  }\n\n  function _getContainer (container) {\n    return {\n      width: container.clientWidth,\n      height: container.clientHeight\n    }\n  }\n\n  function _getScrolled (container) {\n    // Return the container scroll values, plus the its offset.\n    if (container && container !== window.document.documentElement) {\n      var offset = _getOffset(container)\n      return {\n        x: container.scrollLeft + offset.left,\n        y: container.scrollTop + offset.top\n      }\n    } else {\n      // Otherwise, default to the window object’s scroll values.\n      return {\n        x: window.pageXOffset,\n        y: window.pageYOffset\n      }\n    }\n  }\n\n  function _getOffset (domEl) {\n    var offsetTop = 0\n    var offsetLeft = 0\n\n      // Grab the element’s dimensions.\n    var offsetHeight = domEl.offsetHeight\n    var offsetWidth = domEl.offsetWidth\n\n    // Now calculate the distance between the element and its parent, then\n    // again for the parent to its parent, and again etc... until we have the\n    // total distance of the element to the document’s top and left origin.\n    do {\n      if (!isNaN(domEl.offsetTop)) {\n        offsetTop += domEl.offsetTop\n      }\n      if (!isNaN(domEl.offsetLeft)) {\n        offsetLeft += domEl.offsetLeft\n      }\n      domEl = domEl.offsetParent\n    } while (domEl)\n\n    return {\n      top: offsetTop,\n      left: offsetLeft,\n      height: offsetHeight,\n      width: offsetWidth\n    }\n  }\n\n  function _isElemVisible (elem) {\n    var offset = _getOffset(elem.domEl)\n    var container = _getContainer(elem.config.container)\n    var scrolled = _getScrolled(elem.config.container)\n    var vF = elem.config.viewFactor\n\n      // Define the element geometry.\n    var elemHeight = offset.height\n    var elemWidth = offset.width\n    var elemTop = offset.top\n    var elemLeft = offset.left\n    var elemBottom = elemTop + elemHeight\n    var elemRight = elemLeft + elemWidth\n\n    return confirmBounds() || isPositionFixed()\n\n    function confirmBounds () {\n      // Define the element’s functional boundaries using its view factor.\n      var top = elemTop + elemHeight * vF\n      var left = elemLeft + elemWidth * vF\n      var bottom = elemBottom - elemHeight * vF\n      var right = elemRight - elemWidth * vF\n\n      // Define the container functional boundaries using its view offset.\n      var viewTop = scrolled.y + elem.config.viewOffset.top\n      var viewLeft = scrolled.x + elem.config.viewOffset.left\n      var viewBottom = scrolled.y - elem.config.viewOffset.bottom + container.height\n      var viewRight = scrolled.x - elem.config.viewOffset.right + container.width\n\n      return top < viewBottom &&\n        bottom > viewTop &&\n        left > viewLeft &&\n        right < viewRight\n    }\n\n    function isPositionFixed () {\n      return (window.getComputedStyle(elem.domEl).position === 'fixed')\n    }\n  }\n\n  /**\n   * Utilities\n   * ---------\n   */\n\n  function Tools () {}\n\n  Tools.prototype.isObject = function (object) {\n    return object !== null && typeof object === 'object' && object.constructor === Object\n  }\n\n  Tools.prototype.isNode = function (object) {\n    return typeof window.Node === 'object'\n      ? object instanceof window.Node\n      : object && typeof object === 'object' &&\n        typeof object.nodeType === 'number' &&\n        typeof object.nodeName === 'string'\n  }\n\n  Tools.prototype.isNodeList = function (object) {\n    var prototypeToString = Object.prototype.toString.call(object)\n    var regex = /^\\[object (HTMLCollection|NodeList|Object)\\]$/\n\n    return typeof window.NodeList === 'object'\n      ? object instanceof window.NodeList\n      : object && typeof object === 'object' &&\n        regex.test(prototypeToString) &&\n        typeof object.length === 'number' &&\n        (object.length === 0 || this.isNode(object[0]))\n  }\n\n  Tools.prototype.forOwn = function (object, callback) {\n    if (!this.isObject(object)) {\n      throw new TypeError('Expected \"object\", but received \"' + typeof object + '\".')\n    } else {\n      for (var property in object) {\n        if (object.hasOwnProperty(property)) {\n          callback(property)\n        }\n      }\n    }\n  }\n\n  Tools.prototype.extend = function (target, source) {\n    this.forOwn(source, function (property) {\n      if (this.isObject(source[property])) {\n        if (!target[property] || !this.isObject(target[property])) {\n          target[property] = {}\n        }\n        this.extend(target[property], source[property])\n      } else {\n        target[property] = source[property]\n      }\n    }.bind(this))\n    return target\n  }\n\n  Tools.prototype.extendClone = function (target, source) {\n    return this.extend(this.extend({}, target), source)\n  }\n\n  Tools.prototype.isMobile = function () {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)\n  }\n\n  /**\n   * Polyfills\n   * --------\n   */\n\n  _requestAnimationFrame = window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    function (callback) {\n      window.setTimeout(callback, 1000 / 60)\n    }\n\n  /**\n   * Module Wrapper\n   * --------------\n   */\n  if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    define(function () {\n      return ScrollReveal\n    })\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = ScrollReveal\n  } else {\n    window.ScrollReveal = ScrollReveal\n  }\n})();\n","$(document).ready(function() {\n  if ($('.swiper-container').length > 0) {\n    // JavaScript Document\n    autoplay = true;\n    resize = true;\n    var mySwiper = new Swiper('.swiper-container', {\n      autoplay: 3000,\n      progress: true,\n      speed: 1000,\n      paginationClickable: true,\n      loop: true,\n      onProgressChange: function(swiper) {\n        for (var i = 0; i < swiper.slides.length; i++) {\n          var slide = swiper.slides[i];\n          var progress = slide.progress;\n          var translate;\n          if (progress > 0) {\n            translate = progress * 0.9 * swiper.width;\n            scale = 1 - progress * 0.1;\n            if (progress > 1) {\n              scale = 0.9;\n            }\n            txtPositionX = 0;\n            txtPositionY = progress * 30 + 'px';\n\n          } else {\n            translate = 0;\n            scale = 1;\n            txtPositionX = -progress * 1000 + 'px';\n            txtPositionY = 0;\n          }\n\n          var txts = slide.querySelectorAll('.txt');\n          for (var j = 0; j < txts.length; j++) {\n            swiper.setTransform(txts[j], 'translate3d(' + txtPositionX + ',' + txtPositionY + ',0)');\n          }\n          swiper.setTransform(slide, 'translate3d(' + (translate) + 'px,0,0) scale(' + scale + ')');\n\n        }\n      },\n      onTouchStart: function(swiper) {\n        for (var i = 0; i < swiper.slides.length; i++) {\n          swiper.setTransition(swiper.slides[i], 0);\n          var txts = swiper.slides[i].querySelectorAll('.txt');\n          for (var j = 0; j < txts.length; j++) {\n            swiper.setTransition(txts[j], 0);\n          }\n        }\n      },\n      onSetWrapperTransition: function(swiper, speed) {\n        for (var i = 0; i < swiper.slides.length; i++) {\n          swiper.setTransition(swiper.slides[i], speed);\n          var txts = swiper.slides[i].querySelectorAll('.txt');\n          for (var j = 0; j < txts.length; j++) {\n            swiper.setTransition(txts[j], speed);\n          }\n        }\n      },\n      onSlideChangeStart: function(swiper) {\n        if (autoplay) {\n          if (swiper.activeLoopIndex === 0) {\n            $('.pagination li').removeClass('current');\n            $('.pagination li').eq(0).removeClass('replace');\n          }\n          if (swiper.activeLoopIndex == 1) {\n            $('.pagination li').eq(0).removeClass('firstCurrent current').addClass('replace');\n          }\n          $('.pagination li').eq(swiper.activeLoopIndex).addClass('current');\n        } else {\n          $('.pagination li').removeClass('current firstCurrent click');\n          $('.pagination li').eq(swiper.activeLoopIndex).addClass('current');\n        }\n\n      },\n      onFirstInit: function(swiper) {\n        $('.pagination li').eq(0).addClass('firstCurrent');\n      },\n\n      onAutoplayStop: function() {\n        autoplay = false;\n        $('.autoplay').removeClass('autoplay');\n      },\n    });\n\n    // Set Z-Indexes\n    for (var i = 0; i < mySwiper.slides.length; i++) {\n      mySwiper.slides[i].style.zIndex = i;\n    }\n    $(\".swiper-container\").animate({ opacity: 1 }, 'fast');\n\n    $('.arrow-left').on('click', function(e) {\n      e.preventDefault();\n      mySwiper.swipePrev();\n    });\n    $('.arrow-right').on('click', function(e) {\n      e.preventDefault();\n      mySwiper.swipeNext();\n    });\n    $(\".pagination li\").on('touchstart mousedown', function(e) {\n      e.preventDefault();\n      if (autoplay) {\n        autoplay = false;\n        mySwiper.stopAutoplay();\n        $(this).addClass('click');\n      }\n\n      mySwiper.swipeTo($(this).index());\n    });\n    window.onresize = function() {\n      if (resize) {\n        resize = false;\n        setTimeout(function() {\n          resize = true;\n          mySwiper.reInit();\n        }, 2000);\n      }\n    };\n  }\n\n  function autoPlayYouTubeModal() {\n    var trigger = $(\"body\").find('[data-toggle=\"modal\"]');\n    trigger.click(function() {\n      var theModal = $(this).data(\"target\"),\n        videoSRC = $(this).attr(\"data-theVideo\"),\n        videoSRCauto = videoSRC + \"?autoplay=1\";\n      $(theModal + ' iframe').attr('src', videoSRCauto);\n      $(theModal + ' button.close').click(function() {\n        $(theModal + ' iframe').attr('src', videoSRC);\n      });\n    });\n  }\n\n  if ($('#video_btn').length > 0) {\n    $('#video_dlg').on('hidden.bs.modal', function() {\n      $('#video_dlg iframe').removeAttr('src');\n    });\n    $(document).ready(function() {\n      autoPlayYouTubeModal();\n    });\n  }\n\n  if ($('.aura').length > 0) {\n    console.log('init scroll reveal');\n    window.sr = ScrollReveal({ reset: true });\n    // sr.reveal('.text_panel');\n    // sr.reveal('.text_panel2');\n    // sr.reveal('.text_panel3');\n    // sr.reveal('.text_panel4');\n  }\n});"],"sourceRoot":"/source/"}